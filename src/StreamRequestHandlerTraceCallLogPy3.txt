
         _____ ___             ___            _                                   _ _         _                                           
   _    |_   _/ _ \     _     / _ \     _    | |_ _ __ __ _  ___ ___     ___ __ _| | |___    (_)_ __      ___ _ __   ___  ___ ___     _   
 _| |_    | || | | |  _| |_  | | | |  _| |_  | __| '__/ _` |/ __/ _ \   / __/ _` | | / __|   | | '_ \    / __| '_ \ / _ \/ __/ __|  _| |_ 
|_   _|   | || |_| | |_   _| | |_| | |_   _| | |_| | | (_| | (_|  __/  | (_| (_| | | \__ \   | | | | |   \__ \ |_) |  __/ (__\__ \ |_   _|
  |_|     |_| \___/    |_|    \___/    |_|    \__|_|  \__,_|\___\___|___\___\__,_|_|_|___/___|_|_| |_|___|___/ .__/ \___|\___|___/   |_|  
                                                                   |_____|              |_____|     |_____|  |_|                          


# Parsed specs:
('socket.IntEnum', {'regex': False, 'spec_arg': False, 'spec_uri': 'socket.IntEnum'})
('socket._intenum_converter', {'regex': False, 'spec_arg': False, 'spec_uri': 'socket._intenum_converter'})
('socket._realsocket', {'regex': False, 'spec_arg': False, 'spec_uri': 'socket._realsocket'})
('socket.SocketIO.__init__', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'socket.SocketIO.__init__'})
('selectors.ABCMeta', {'regex': False, 'spec_arg': False, 'spec_uri': 'selectors.ABCMeta'})
('selectors.Mapping', {'regex': False, 'spec_arg': False, 'spec_uri': 'selectors.Mapping'})
('selectors.SelectSelector', {'regex': False, 'spec_arg': False, 'spec_uri': 'selectors.SelectSelector'})
('selectors.DefaultSelector.__init__', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.__init__'})
('selectors.DefaultSelector.select', {'regex': False, 'spec_arg': 'hide_tree', 'spec_uri': 'selectors.DefaultSelector.select'})
('selectors.DefaultSelector.register', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.register'})
('__main__.CustomHandler', {'regex': False, 'spec_arg': True, 'spec_uri': '__main__.CustomHandler'})
('__main__.CustomHandler.__init__', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.__init__'})
('__main__.CustomHandler.setup', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.setup'})
('__main__.CustomHandler.handle', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.handle'})
('__main__.CustomHandler.finish', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.finish'})
('__main__.main', {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.main'})
('aoiktracecall([.].+)?', {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'})
('.+[.]copy', {'regex': True, 'spec_arg': False, 'spec_uri': '.+[.]copy'})
('.+[.]__setattr__', {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'})
('socket[.].+[.]getsockname', {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]getsockname'})
('socket[.].+[.]getpeername', {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]getpeername'})
('(socket|SocketServer)[.].+[.]fileno', {'regex': True, 'spec_arg': False, 'spec_uri': '(socket|SocketServer)[.].+[.]fileno'})
('socket[.](socket|_socketobject|SocketType)[.]__init__', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]__init__'})
('socket[.](socket|_socketobject|SocketType)[.]bind', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]bind'})
('socket[.](socket|_socketobject|SocketType)[.]listen', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]listen'})
('socket[.](socket|_socketobject|SocketType)[.]accept', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]accept'})
('socket[.](socket|_socketobject|SocketType)[.]makefile', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]makefile'})
('socket[.](socket|_socketobject|SocketType)[.]close', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]close'})
('socket[.].+[.]__[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'})
('socket([.].+)?', {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'})
('selectors[.].+[.]__[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'})
('selectors([.].+)?', {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'})
('(socketserver|SocketServer)._eintr_retry', {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)._eintr_retry'})
('(socketserver|SocketServer)._ServerSelector', {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)._ServerSelector'})
('(socketserver|SocketServer).BaseServer.__init__', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).BaseServer.__init__'})
('(socketserver|SocketServer).TCPServer.__init__', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.__init__'})
('(socketserver|SocketServer).TCPServer.server_bind', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.server_bind'})
('(socketserver|SocketServer).TCPServer.setup_environ', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.setup_environ'})
('(socketserver|SocketServer).TCPServer.server_activate', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.server_activate'})
('(socketserver|SocketServer).TCPServer.serve_forever', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.serve_forever'})
('(socketserver|SocketServer).TCPServer._handle_request_noblock', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer._handle_request_noblock'})
('(socketserver|SocketServer).TCPServer.set_app', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.set_app'})
('(socketserver|SocketServer).TCPServer.get_request', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.get_request'})
('(socketserver|SocketServer).TCPServer.verify_request', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.verify_request'})
('(socketserver|SocketServer).TCPServer.process_request', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.process_request'})
('(socketserver|SocketServer).TCPServer.finish_request', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.finish_request'})
('(socketserver|SocketServer).TCPServer.shutdown_request', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.shutdown_request'})
('(socketserver|SocketServer).TCPServer.close_request', {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.close_request'})
('(socketserver|SocketServer)[.].+[.]service_actions', {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'})
('(socketserver|SocketServer)[.].+[.]__[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'})
('(socketserver|SocketServer)([.].+)?', {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'})
('__main__[.].+[.]__[^.]+__', {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'})
('__main__([.].+)?', {'regex': True, 'spec_arg': True, 'spec_uri': '__main__([.].+)?'})

# ----- Process module `aoiktracecall.config` -----
# Match: aoiktracecall.config: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.config

# ----- Process module `_random` -----
# Match: _random: None
!: _random

# ----- Process module `random` -----
# Match: random: None
!: random

# ----- Process module `_codecs` -----
# Match: _codecs: None
!: _codecs

# ----- Process module `heapq` -----
# Match: heapq: None
!: heapq

# ----- Process module `pyexpat.model` -----
# Match: pyexpat.model: None
!: pyexpat.model

# ----- Process module `dis` -----
# Match: dis: None
!: dis

# ----- Process module `pkg_resources._vendor` -----
# Match: pkg_resources._vendor: None
!: pkg_resources._vendor

# ----- Process module `token` -----
# Match: token: None
!: token

# ----- Process module `aoiktracecall.util` -----
# Match: aoiktracecall.util: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.util

# ----- Process module `encodings.utf_8` -----
# Match: encodings.utf_8: None
!: encodings.utf_8

# ----- Process module `linecache` -----
# Match: linecache: None
!: linecache

# ----- Process module `platform` -----
# Match: platform: None
!: platform

# ----- Process module `sysconfig` -----
# Match: sysconfig: None
!: sysconfig

# ----- Process module `pywintypes` -----
# Match: pywintypes: None
!: pywintypes

# ----- Process module `xml.parsers.expat` -----
# Match: xml.parsers.expat: None
!: xml.parsers.expat

# ----- Process module `reprlib` -----
# Match: reprlib: None
!: reprlib

# ----- Process module `importlib._bootstrap_external` -----
# Match: importlib._bootstrap_external: None
!: importlib._bootstrap_external

# ----- Process module `inspect` -----
# Match: inspect: None
!: inspect

# ----- Process module `socket` -----
# Match: socket: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket

# ----- Process class `socket.SocketType` -----
!: socket.SocketType == _socket.SocketType

# ----- Process class `socket._GiveupOnSendfile` -----

# ----- Process class `socket.socket` -----
# Match: socket.socket: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket

# ---- Search base class `builtins.object` ----
# Match: socket.socket.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__delattr__ == builtins.object.__delattr__
# Match: socket.socket.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__dir__ == builtins.object.__dir__
# Match: socket.socket.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__eq__ == builtins.object.__eq__
# Match: socket.socket.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__format__ == builtins.object.__format__
# Match: socket.socket.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__ge__ == builtins.object.__ge__
# Match: socket.socket.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__getattribute__ == builtins.object.__getattribute__
# Match: socket.socket.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__gt__ == builtins.object.__gt__
# Match: socket.socket.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__hash__ == builtins.object.__hash__
# Match: socket.socket.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]__init__'}
@: socket.socket.__init__ == builtins.object.__init__
# Match: socket.socket.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__le__ == builtins.object.__le__
# Match: socket.socket.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__lt__ == builtins.object.__lt__
# Match: socket.socket.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__ne__ == builtins.object.__ne__
# Match: socket.socket.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__new__ == builtins.object.__new__
# Match: socket.socket.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__reduce__ == builtins.object.__reduce__
# Match: socket.socket.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socket.socket.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__repr__ == builtins.object.__repr__
# Match: socket.socket.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socket.socket.__setattr__ == builtins.object.__setattr__
# Match: socket.socket.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__sizeof__ == builtins.object.__sizeof__
# Match: socket.socket.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__str__ == builtins.object.__str__
# Match: socket.socket.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `_socket.socket` ----
# Match: socket.socket.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__getattribute__ == _socket.socket.__getattribute__
# Match: socket.socket.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]__init__'}
@: socket.socket.__init__ == _socket.socket.__init__
# Match: socket.socket.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__new__ == _socket.socket.__new__
# Match: socket.socket.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__repr__ == _socket.socket.__repr__
# Match: socket.socket._accept: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._accept == _socket.socket._accept
# Match: socket.socket.bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]bind'}
@: socket.socket.bind == _socket.socket.bind
# Match: socket.socket.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]close'}
@: socket.socket.close == _socket.socket.close
# Match: socket.socket.connect: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.connect == _socket.socket.connect
# Match: socket.socket.connect_ex: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.connect_ex == _socket.socket.connect_ex
# Match: socket.socket.detach: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.detach == _socket.socket.detach
# Match: socket.socket.fileno: {'regex': True, 'spec_arg': False, 'spec_uri': '(socket|SocketServer)[.].+[.]fileno'}
!: socket.socket.fileno == _socket.socket.fileno
# Match: socket.socket.getpeername: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]getpeername'}
!: socket.socket.getpeername == _socket.socket.getpeername
# Match: socket.socket.getsockname: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]getsockname'}
!: socket.socket.getsockname == _socket.socket.getsockname
# Match: socket.socket.getsockopt: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.getsockopt == _socket.socket.getsockopt
# Match: socket.socket.gettimeout: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.gettimeout == _socket.socket.gettimeout
# Match: socket.socket.ioctl: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.ioctl == _socket.socket.ioctl
# Match: socket.socket.listen: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]listen'}
@: socket.socket.listen == _socket.socket.listen
# Match: socket.socket.recv: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.recv == _socket.socket.recv
# Match: socket.socket.recv_into: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.recv_into == _socket.socket.recv_into
# Match: socket.socket.recvfrom: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.recvfrom == _socket.socket.recvfrom
# Match: socket.socket.recvfrom_into: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.recvfrom_into == _socket.socket.recvfrom_into
# Match: socket.socket.send: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.send == _socket.socket.send
# Match: socket.socket.sendall: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.sendall == _socket.socket.sendall
# Match: socket.socket.sendto: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.sendto == _socket.socket.sendto
# Match: socket.socket.setblocking: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.setblocking == _socket.socket.setblocking
# Match: socket.socket.setsockopt: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.setsockopt == _socket.socket.setsockopt
# Match: socket.socket.settimeout: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.settimeout == _socket.socket.settimeout
# Match: socket.socket.share: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.share == _socket.socket.share
# Match: socket.socket.shutdown: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.shutdown == _socket.socket.shutdown

# ---- Search class `socket.socket` ----
# Match: socket.socket.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__enter__
# Match: socket.socket.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__exit__
# Match: socket.socket.__getstate__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__getstate__
# Match: socket.socket.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]__init__'}
@: socket.socket.__init__
# Match: socket.socket.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.socket.__repr__
# Match: socket.socket._check_sendfile_params: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._check_sendfile_params
# Match: socket.socket._decref_socketios: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._decref_socketios
# Match: socket.socket._real_close: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._real_close
# Match: socket.socket._sendfile_use_send: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._sendfile_use_send
# Match: socket.socket._sendfile_use_sendfile: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket._sendfile_use_sendfile
# Match: socket.socket.accept: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]accept'}
@: socket.socket.accept
# Match: socket.socket.close: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]close'}
@: socket.socket.close
# Match: socket.socket.detach: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.detach
# Match: socket.socket.dup: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.dup
# Match: socket.socket.get_inheritable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.get_inheritable
# Match: socket.socket.makefile: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': 'socket[.](socket|_socketobject|SocketType)[.]makefile'}
@: socket.socket.makefile
# Match: socket.socket.sendfile: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.sendfile
# Match: socket.socket.set_inheritable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socket.set_inheritable

# ---- Wrap class `socket.socket`'s attributes ----
@: socket.socket.__init__
@: socket.socket.__setattr__ == builtins.object.__setattr__
@: socket.socket._accept == _socket.socket._accept
@: socket.socket._check_sendfile_params
@: socket.socket._decref_socketios
@: socket.socket._real_close
@: socket.socket._sendfile_use_send
@: socket.socket._sendfile_use_sendfile
@: socket.socket.accept
@: socket.socket.bind == _socket.socket.bind
@: socket.socket.close
@: socket.socket.connect == _socket.socket.connect
@: socket.socket.connect_ex == _socket.socket.connect_ex
@: socket.socket.detach
@: socket.socket.dup
@: socket.socket.get_inheritable
@: socket.socket.getsockopt == _socket.socket.getsockopt
@: socket.socket.gettimeout == _socket.socket.gettimeout
@: socket.socket.ioctl == _socket.socket.ioctl
@: socket.socket.listen == _socket.socket.listen
@: socket.socket.makefile
@: socket.socket.recv == _socket.socket.recv
@: socket.socket.recv_into == _socket.socket.recv_into
@: socket.socket.recvfrom == _socket.socket.recvfrom
@: socket.socket.recvfrom_into == _socket.socket.recvfrom_into
@: socket.socket.send == _socket.socket.send
@: socket.socket.sendall == _socket.socket.sendall
@: socket.socket.sendfile
@: socket.socket.sendto == _socket.socket.sendto
@: socket.socket.set_inheritable
@: socket.socket.setblocking == _socket.socket.setblocking
@: socket.socket.setsockopt == _socket.socket.setsockopt
@: socket.socket.settimeout == _socket.socket.settimeout
@: socket.socket.share == _socket.socket.share
@: socket.socket.shutdown == _socket.socket.shutdown
# ===== Process class `socket.socket` =====


# ----- Process class `socket._realsocket` -----
!: socket._realsocket == _socket._realsocket

# ----- Process callable `socket.inet_pton` -----
!: socket.inet_pton == _socket.inet_pton

# ----- Process callable `socket.ntohs` -----
!: socket.ntohs == _socket.ntohs

# ----- Process callable `socket.gethostname` -----
!: socket.gethostname == _socket.gethostname

# ----- Process callable `socket.inet_ntoa` -----
!: socket.inet_ntoa == _socket.inet_ntoa

# ----- Process class `socket.IntEnum` -----
!: socket.IntEnum == enum.IntEnum

# ----- Process class `socket.SocketIO` -----
# Match: socket.SocketIO: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO

# ---- Search base class `builtins.object` ----
# Match: socket.SocketIO.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__delattr__ == builtins.object.__delattr__
# Match: socket.SocketIO.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__dir__ == builtins.object.__dir__
# Match: socket.SocketIO.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__eq__ == builtins.object.__eq__
# Match: socket.SocketIO.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__format__ == builtins.object.__format__
# Match: socket.SocketIO.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__ge__ == builtins.object.__ge__
# Match: socket.SocketIO.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__getattribute__ == builtins.object.__getattribute__
# Match: socket.SocketIO.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__gt__ == builtins.object.__gt__
# Match: socket.SocketIO.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__hash__ == builtins.object.__hash__
# Match: socket.SocketIO.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'socket.SocketIO.__init__'}
@: socket.SocketIO.__init__ == builtins.object.__init__
# Match: socket.SocketIO.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__le__ == builtins.object.__le__
# Match: socket.SocketIO.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__lt__ == builtins.object.__lt__
# Match: socket.SocketIO.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__ne__ == builtins.object.__ne__
# Match: socket.SocketIO.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__new__ == builtins.object.__new__
# Match: socket.SocketIO.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__reduce__ == builtins.object.__reduce__
# Match: socket.SocketIO.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socket.SocketIO.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__repr__ == builtins.object.__repr__
# Match: socket.SocketIO.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socket.SocketIO.__setattr__ == builtins.object.__setattr__
# Match: socket.SocketIO.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__sizeof__ == builtins.object.__sizeof__
# Match: socket.SocketIO.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__str__ == builtins.object.__str__
# Match: socket.SocketIO.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `_io._IOBase` ----
# Match: socket.SocketIO.__del__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__del__ == _io._IOBase.__del__
# Match: socket.SocketIO.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__enter__ == _io._IOBase.__enter__
# Match: socket.SocketIO.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__exit__ == _io._IOBase.__exit__
# Match: socket.SocketIO.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__iter__ == _io._IOBase.__iter__
# Match: socket.SocketIO.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__new__ == _io._IOBase.__new__
# Match: socket.SocketIO.__next__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketIO.__next__ == _io._IOBase.__next__
# Match: socket.SocketIO._checkClosed: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO._checkClosed == _io._IOBase._checkClosed
# Match: socket.SocketIO._checkReadable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO._checkReadable == _io._IOBase._checkReadable
# Match: socket.SocketIO._checkSeekable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO._checkSeekable == _io._IOBase._checkSeekable
# Match: socket.SocketIO._checkWritable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO._checkWritable == _io._IOBase._checkWritable
# Match: socket.SocketIO.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.close == _io._IOBase.close
# Match: socket.SocketIO.fileno: {'regex': True, 'spec_arg': False, 'spec_uri': '(socket|SocketServer)[.].+[.]fileno'}
!: socket.SocketIO.fileno == _io._IOBase.fileno
# Match: socket.SocketIO.flush: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.flush == _io._IOBase.flush
# Match: socket.SocketIO.isatty: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.isatty == _io._IOBase.isatty
# Match: socket.SocketIO.readable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.readable == _io._IOBase.readable
# Match: socket.SocketIO.readline: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.readline == _io._IOBase.readline
# Match: socket.SocketIO.readlines: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.readlines == _io._IOBase.readlines
# Match: socket.SocketIO.seek: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.seek == _io._IOBase.seek
# Match: socket.SocketIO.seekable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.seekable == _io._IOBase.seekable
# Match: socket.SocketIO.tell: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.tell == _io._IOBase.tell
# Match: socket.SocketIO.truncate: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.truncate == _io._IOBase.truncate
# Match: socket.SocketIO.writable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.writable == _io._IOBase.writable
# Match: socket.SocketIO.writelines: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.writelines == _io._IOBase.writelines

# ---- Search base class `io.IOBase` ----

# ---- Search base class `_io._RawIOBase` ----
# Match: socket.SocketIO.read: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.read == _io._RawIOBase.read
# Match: socket.SocketIO.readall: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.readall == _io._RawIOBase.readall
# Match: socket.SocketIO.readinto: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.readinto == _io._RawIOBase.readinto
# Match: socket.SocketIO.write: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.write == _io._RawIOBase.write

# ---- Search base class `io.RawIOBase` ----

# ---- Search class `socket.SocketIO` ----
# Match: socket.SocketIO.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'socket.SocketIO.__init__'}
@: socket.SocketIO.__init__
# Match: socket.SocketIO.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.close
# Match: socket.SocketIO.fileno: {'regex': True, 'spec_arg': False, 'spec_uri': '(socket|SocketServer)[.].+[.]fileno'}
!: socket.SocketIO.fileno
# Match: socket.SocketIO.readable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.readable
# Match: socket.SocketIO.readinto: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.readinto
# Match: socket.SocketIO.seekable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.seekable
# Match: socket.SocketIO.writable: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.writable
# Match: socket.SocketIO.write: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketIO.write

# ---- Wrap class `socket.SocketIO`'s attributes ----
@: socket.SocketIO.__init__
@: socket.SocketIO.__setattr__ == builtins.object.__setattr__
@: socket.SocketIO._checkClosed == _io._IOBase._checkClosed
@: socket.SocketIO._checkReadable == _io._IOBase._checkReadable
@: socket.SocketIO._checkSeekable == _io._IOBase._checkSeekable
@: socket.SocketIO._checkWritable == _io._IOBase._checkWritable
@: socket.SocketIO.close
@: socket.SocketIO.flush == _io._IOBase.flush
@: socket.SocketIO.isatty == _io._IOBase.isatty
@: socket.SocketIO.read == _io._RawIOBase.read
@: socket.SocketIO.readable
@: socket.SocketIO.readall == _io._RawIOBase.readall
@: socket.SocketIO.readinto
@: socket.SocketIO.readline == _io._IOBase.readline
@: socket.SocketIO.readlines == _io._IOBase.readlines
@: socket.SocketIO.seek == _io._IOBase.seek
@: socket.SocketIO.seekable
@: socket.SocketIO.tell == _io._IOBase.tell
@: socket.SocketIO.truncate == _io._IOBase.truncate
@: socket.SocketIO.writable
@: socket.SocketIO.write
@: socket.SocketIO.writelines == _io._IOBase.writelines
# ===== Process class `socket.SocketIO` =====


# ----- Process callable `socket.getfqdn` -----
# Match: socket.getfqdn: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.getfqdn

# ----- Process class `socket.error` -----

# ----- Process callable `socket.inet_ntop` -----
!: socket.inet_ntop == _socket.inet_ntop

# ----- Process callable `socket.socketpair` -----
# Match: socket.socketpair: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.socketpair

# ----- Process callable `socket.getaddrinfo` -----
# Match: socket.getaddrinfo: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.getaddrinfo

# ----- Process callable `socket.getprotobyname` -----
!: socket.getprotobyname == _socket.getprotobyname

# ----- Process class `socket.timeout` -----

# ----- Process callable `socket.inet_aton` -----
!: socket.inet_aton == _socket.inet_aton

# ----- Process class `socket.AddressFamily` -----
# Match: socket.AddressFamily: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily

# ---- Search base class `builtins.object` ----
# Match: socket.AddressFamily.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__delattr__ == builtins.object.__delattr__
# Match: socket.AddressFamily.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__dir__ == builtins.object.__dir__
# Match: socket.AddressFamily.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__eq__ == builtins.object.__eq__
# Match: socket.AddressFamily.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__format__ == builtins.object.__format__
# Match: socket.AddressFamily.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ge__ == builtins.object.__ge__
# Match: socket.AddressFamily.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__getattribute__ == builtins.object.__getattribute__
# Match: socket.AddressFamily.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__gt__ == builtins.object.__gt__
# Match: socket.AddressFamily.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__hash__ == builtins.object.__hash__
# Match: socket.AddressFamily.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__init__ == builtins.object.__init__
# Match: socket.AddressFamily.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__le__ == builtins.object.__le__
# Match: socket.AddressFamily.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__lt__ == builtins.object.__lt__
# Match: socket.AddressFamily.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ne__ == builtins.object.__ne__
# Match: socket.AddressFamily.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__new__ == builtins.object.__new__
# Match: socket.AddressFamily.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__reduce__ == builtins.object.__reduce__
# Match: socket.AddressFamily.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socket.AddressFamily.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__repr__ == builtins.object.__repr__
# Match: socket.AddressFamily.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socket.AddressFamily.__setattr__ == builtins.object.__setattr__
# Match: socket.AddressFamily.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__sizeof__ == builtins.object.__sizeof__
# Match: socket.AddressFamily.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__str__ == builtins.object.__str__
# Match: socket.AddressFamily.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `enum.Enum` ----
# Match: socket.AddressFamily.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__dir__ == enum.Enum.__dir__
# Match: socket.AddressFamily.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__format__ == enum.Enum.__format__
# Match: socket.AddressFamily.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__hash__ == enum.Enum.__hash__
# Match: socket.AddressFamily.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__reduce_ex__ == enum.Enum.__reduce_ex__
# Match: socket.AddressFamily.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__repr__ == enum.Enum.__repr__
# Match: socket.AddressFamily.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__str__ == enum.Enum.__str__
# Match: socket.AddressFamily._member_type_: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily._member_type_ == enum.Enum._member_type_

# ---- Search base class `builtins.int` ----
# Match: socket.AddressFamily.__abs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__abs__ == builtins.int.__abs__
# Match: socket.AddressFamily.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__add__ == builtins.int.__add__
# Match: socket.AddressFamily.__and__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__and__ == builtins.int.__and__
# Match: socket.AddressFamily.__bool__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__bool__ == builtins.int.__bool__
# Match: socket.AddressFamily.__ceil__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ceil__ == builtins.int.__ceil__
# Match: socket.AddressFamily.__divmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__divmod__ == builtins.int.__divmod__
# Match: socket.AddressFamily.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__eq__ == builtins.int.__eq__
# Match: socket.AddressFamily.__float__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__float__ == builtins.int.__float__
# Match: socket.AddressFamily.__floor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__floor__ == builtins.int.__floor__
# Match: socket.AddressFamily.__floordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__floordiv__ == builtins.int.__floordiv__
# Match: socket.AddressFamily.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__format__ == builtins.int.__format__
# Match: socket.AddressFamily.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ge__ == builtins.int.__ge__
# Match: socket.AddressFamily.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__getattribute__ == builtins.int.__getattribute__
# Match: socket.AddressFamily.__getnewargs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__getnewargs__ == builtins.int.__getnewargs__
# Match: socket.AddressFamily.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__gt__ == builtins.int.__gt__
# Match: socket.AddressFamily.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__hash__ == builtins.int.__hash__
# Match: socket.AddressFamily.__index__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__index__ == builtins.int.__index__
# Match: socket.AddressFamily.__int__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__int__ == builtins.int.__int__
# Match: socket.AddressFamily.__invert__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__invert__ == builtins.int.__invert__
# Match: socket.AddressFamily.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__le__ == builtins.int.__le__
# Match: socket.AddressFamily.__lshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__lshift__ == builtins.int.__lshift__
# Match: socket.AddressFamily.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__lt__ == builtins.int.__lt__
# Match: socket.AddressFamily.__mod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__mod__ == builtins.int.__mod__
# Match: socket.AddressFamily.__mul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__mul__ == builtins.int.__mul__
# Match: socket.AddressFamily.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ne__ == builtins.int.__ne__
# Match: socket.AddressFamily.__neg__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__neg__ == builtins.int.__neg__
# Match: socket.AddressFamily.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__new__ == builtins.int.__new__
# Match: socket.AddressFamily.__or__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__or__ == builtins.int.__or__
# Match: socket.AddressFamily.__pos__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__pos__ == builtins.int.__pos__
# Match: socket.AddressFamily.__pow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__pow__ == builtins.int.__pow__
# Match: socket.AddressFamily.__radd__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__radd__ == builtins.int.__radd__
# Match: socket.AddressFamily.__rand__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rand__ == builtins.int.__rand__
# Match: socket.AddressFamily.__rdivmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rdivmod__ == builtins.int.__rdivmod__
# Match: socket.AddressFamily.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__repr__ == builtins.int.__repr__
# Match: socket.AddressFamily.__rfloordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rfloordiv__ == builtins.int.__rfloordiv__
# Match: socket.AddressFamily.__rlshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rlshift__ == builtins.int.__rlshift__
# Match: socket.AddressFamily.__rmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rmod__ == builtins.int.__rmod__
# Match: socket.AddressFamily.__rmul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rmul__ == builtins.int.__rmul__
# Match: socket.AddressFamily.__ror__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__ror__ == builtins.int.__ror__
# Match: socket.AddressFamily.__round__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__round__ == builtins.int.__round__
# Match: socket.AddressFamily.__rpow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rpow__ == builtins.int.__rpow__
# Match: socket.AddressFamily.__rrshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rrshift__ == builtins.int.__rrshift__
# Match: socket.AddressFamily.__rshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rshift__ == builtins.int.__rshift__
# Match: socket.AddressFamily.__rsub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rsub__ == builtins.int.__rsub__
# Match: socket.AddressFamily.__rtruediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rtruediv__ == builtins.int.__rtruediv__
# Match: socket.AddressFamily.__rxor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__rxor__ == builtins.int.__rxor__
# Match: socket.AddressFamily.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__sizeof__ == builtins.int.__sizeof__
# Match: socket.AddressFamily.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__str__ == builtins.int.__str__
# Match: socket.AddressFamily.__sub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__sub__ == builtins.int.__sub__
# Match: socket.AddressFamily.__truediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__truediv__ == builtins.int.__truediv__
# Match: socket.AddressFamily.__trunc__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__trunc__ == builtins.int.__trunc__
# Match: socket.AddressFamily.__xor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__xor__ == builtins.int.__xor__
# Match: socket.AddressFamily.bit_length: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily.bit_length == builtins.int.bit_length
# Match: socket.AddressFamily.conjugate: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily.conjugate == builtins.int.conjugate
# Match: socket.AddressFamily.from_bytes: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily.from_bytes == builtins.int.from_bytes
# Match: socket.AddressFamily.to_bytes: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily.to_bytes == builtins.int.to_bytes

# ---- Search base class `enum.IntEnum` ----
# Match: socket.AddressFamily.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__format__ == enum.IntEnum.__format__
# Match: socket.AddressFamily.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__new__ == enum.IntEnum.__new__
# Match: socket.AddressFamily.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__repr__ == enum.IntEnum.__repr__
# Match: socket.AddressFamily.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__str__ == enum.IntEnum.__str__
# Match: socket.AddressFamily._member_type_: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily._member_type_ == enum.IntEnum._member_type_

# ---- Search class `socket.AddressFamily` ----
# Match: socket.AddressFamily.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__new__
# Match: socket.AddressFamily.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.AddressFamily.__reduce_ex__
# Match: socket.AddressFamily._member_type_: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.AddressFamily._member_type_ == enum.IntEnum._member_type_

# ---- Wrap class `socket.AddressFamily`'s attributes ----
@: socket.AddressFamily.__setattr__ == builtins.object.__setattr__
@: socket.AddressFamily._member_type_ == enum.IntEnum._member_type_
@: socket.AddressFamily.bit_length == builtins.int.bit_length
@: socket.AddressFamily.conjugate == builtins.int.conjugate
@: socket.AddressFamily.from_bytes == builtins.int.from_bytes
@: socket.AddressFamily.to_bytes == builtins.int.to_bytes
# ===== Process class `socket.AddressFamily` =====


# ----- Process class `socket.gaierror` -----

# ----- Process callable `socket.create_connection` -----
# Match: socket.create_connection: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.create_connection

# ----- Process callable `socket.gethostbyname_ex` -----
!: socket.gethostbyname_ex == _socket.gethostbyname_ex

# ----- Process callable `socket.gethostbyname` -----
!: socket.gethostbyname == _socket.gethostbyname

# ----- Process callable `socket.dup` -----
!: socket.dup == _socket.dup

# ----- Process callable `socket.setdefaulttimeout` -----
!: socket.setdefaulttimeout == _socket.setdefaulttimeout

# ----- Process callable `socket.fromfd` -----
# Match: socket.fromfd: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.fromfd

# ----- Process class `socket.herror` -----

# ----- Process callable `socket.getnameinfo` -----
!: socket.getnameinfo == _socket.getnameinfo

# ----- Process callable `socket.htons` -----
!: socket.htons == _socket.htons

# ----- Process callable `socket.getdefaulttimeout` -----
!: socket.getdefaulttimeout == _socket.getdefaulttimeout

# ----- Process class `socket.SocketKind` -----
# Match: socket.SocketKind: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind

# ---- Search base class `builtins.object` ----
# Match: socket.SocketKind.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__delattr__ == builtins.object.__delattr__
# Match: socket.SocketKind.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__dir__ == builtins.object.__dir__
# Match: socket.SocketKind.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__eq__ == builtins.object.__eq__
# Match: socket.SocketKind.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__format__ == builtins.object.__format__
# Match: socket.SocketKind.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ge__ == builtins.object.__ge__
# Match: socket.SocketKind.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__getattribute__ == builtins.object.__getattribute__
# Match: socket.SocketKind.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__gt__ == builtins.object.__gt__
# Match: socket.SocketKind.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__hash__ == builtins.object.__hash__
# Match: socket.SocketKind.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__init__ == builtins.object.__init__
# Match: socket.SocketKind.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__le__ == builtins.object.__le__
# Match: socket.SocketKind.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__lt__ == builtins.object.__lt__
# Match: socket.SocketKind.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ne__ == builtins.object.__ne__
# Match: socket.SocketKind.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__new__ == builtins.object.__new__
# Match: socket.SocketKind.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__reduce__ == builtins.object.__reduce__
# Match: socket.SocketKind.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socket.SocketKind.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__repr__ == builtins.object.__repr__
# Match: socket.SocketKind.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socket.SocketKind.__setattr__ == builtins.object.__setattr__
# Match: socket.SocketKind.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__sizeof__ == builtins.object.__sizeof__
# Match: socket.SocketKind.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__str__ == builtins.object.__str__
# Match: socket.SocketKind.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `enum.Enum` ----
# Match: socket.SocketKind.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__dir__ == enum.Enum.__dir__
# Match: socket.SocketKind.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__format__ == enum.Enum.__format__
# Match: socket.SocketKind.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__hash__ == enum.Enum.__hash__
# Match: socket.SocketKind.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__reduce_ex__ == enum.Enum.__reduce_ex__
# Match: socket.SocketKind.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__repr__ == enum.Enum.__repr__
# Match: socket.SocketKind.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__str__ == enum.Enum.__str__
# Match: socket.SocketKind._member_type_: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind._member_type_ == enum.Enum._member_type_

# ---- Search base class `builtins.int` ----
# Match: socket.SocketKind.__abs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__abs__ == builtins.int.__abs__
# Match: socket.SocketKind.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__add__ == builtins.int.__add__
# Match: socket.SocketKind.__and__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__and__ == builtins.int.__and__
# Match: socket.SocketKind.__bool__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__bool__ == builtins.int.__bool__
# Match: socket.SocketKind.__ceil__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ceil__ == builtins.int.__ceil__
# Match: socket.SocketKind.__divmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__divmod__ == builtins.int.__divmod__
# Match: socket.SocketKind.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__eq__ == builtins.int.__eq__
# Match: socket.SocketKind.__float__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__float__ == builtins.int.__float__
# Match: socket.SocketKind.__floor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__floor__ == builtins.int.__floor__
# Match: socket.SocketKind.__floordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__floordiv__ == builtins.int.__floordiv__
# Match: socket.SocketKind.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__format__ == builtins.int.__format__
# Match: socket.SocketKind.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ge__ == builtins.int.__ge__
# Match: socket.SocketKind.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__getattribute__ == builtins.int.__getattribute__
# Match: socket.SocketKind.__getnewargs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__getnewargs__ == builtins.int.__getnewargs__
# Match: socket.SocketKind.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__gt__ == builtins.int.__gt__
# Match: socket.SocketKind.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__hash__ == builtins.int.__hash__
# Match: socket.SocketKind.__index__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__index__ == builtins.int.__index__
# Match: socket.SocketKind.__int__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__int__ == builtins.int.__int__
# Match: socket.SocketKind.__invert__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__invert__ == builtins.int.__invert__
# Match: socket.SocketKind.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__le__ == builtins.int.__le__
# Match: socket.SocketKind.__lshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__lshift__ == builtins.int.__lshift__
# Match: socket.SocketKind.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__lt__ == builtins.int.__lt__
# Match: socket.SocketKind.__mod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__mod__ == builtins.int.__mod__
# Match: socket.SocketKind.__mul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__mul__ == builtins.int.__mul__
# Match: socket.SocketKind.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ne__ == builtins.int.__ne__
# Match: socket.SocketKind.__neg__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__neg__ == builtins.int.__neg__
# Match: socket.SocketKind.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__new__ == builtins.int.__new__
# Match: socket.SocketKind.__or__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__or__ == builtins.int.__or__
# Match: socket.SocketKind.__pos__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__pos__ == builtins.int.__pos__
# Match: socket.SocketKind.__pow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__pow__ == builtins.int.__pow__
# Match: socket.SocketKind.__radd__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__radd__ == builtins.int.__radd__
# Match: socket.SocketKind.__rand__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rand__ == builtins.int.__rand__
# Match: socket.SocketKind.__rdivmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rdivmod__ == builtins.int.__rdivmod__
# Match: socket.SocketKind.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__repr__ == builtins.int.__repr__
# Match: socket.SocketKind.__rfloordiv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rfloordiv__ == builtins.int.__rfloordiv__
# Match: socket.SocketKind.__rlshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rlshift__ == builtins.int.__rlshift__
# Match: socket.SocketKind.__rmod__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rmod__ == builtins.int.__rmod__
# Match: socket.SocketKind.__rmul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rmul__ == builtins.int.__rmul__
# Match: socket.SocketKind.__ror__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__ror__ == builtins.int.__ror__
# Match: socket.SocketKind.__round__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__round__ == builtins.int.__round__
# Match: socket.SocketKind.__rpow__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rpow__ == builtins.int.__rpow__
# Match: socket.SocketKind.__rrshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rrshift__ == builtins.int.__rrshift__
# Match: socket.SocketKind.__rshift__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rshift__ == builtins.int.__rshift__
# Match: socket.SocketKind.__rsub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rsub__ == builtins.int.__rsub__
# Match: socket.SocketKind.__rtruediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rtruediv__ == builtins.int.__rtruediv__
# Match: socket.SocketKind.__rxor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__rxor__ == builtins.int.__rxor__
# Match: socket.SocketKind.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__sizeof__ == builtins.int.__sizeof__
# Match: socket.SocketKind.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__str__ == builtins.int.__str__
# Match: socket.SocketKind.__sub__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__sub__ == builtins.int.__sub__
# Match: socket.SocketKind.__truediv__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__truediv__ == builtins.int.__truediv__
# Match: socket.SocketKind.__trunc__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__trunc__ == builtins.int.__trunc__
# Match: socket.SocketKind.__xor__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__xor__ == builtins.int.__xor__
# Match: socket.SocketKind.bit_length: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind.bit_length == builtins.int.bit_length
# Match: socket.SocketKind.conjugate: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind.conjugate == builtins.int.conjugate
# Match: socket.SocketKind.from_bytes: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind.from_bytes == builtins.int.from_bytes
# Match: socket.SocketKind.to_bytes: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind.to_bytes == builtins.int.to_bytes

# ---- Search base class `enum.IntEnum` ----
# Match: socket.SocketKind.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__format__ == enum.IntEnum.__format__
# Match: socket.SocketKind.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__new__ == enum.IntEnum.__new__
# Match: socket.SocketKind.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__repr__ == enum.IntEnum.__repr__
# Match: socket.SocketKind.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__str__ == enum.IntEnum.__str__
# Match: socket.SocketKind._member_type_: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind._member_type_ == enum.IntEnum._member_type_

# ---- Search class `socket.SocketKind` ----
# Match: socket.SocketKind.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__new__
# Match: socket.SocketKind.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'socket[.].+[.]__[^.]+__'}
!: socket.SocketKind.__reduce_ex__
# Match: socket.SocketKind._member_type_: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.SocketKind._member_type_ == enum.IntEnum._member_type_

# ---- Wrap class `socket.SocketKind`'s attributes ----
@: socket.SocketKind.__setattr__ == builtins.object.__setattr__
@: socket.SocketKind._member_type_ == enum.IntEnum._member_type_
@: socket.SocketKind.bit_length == builtins.int.bit_length
@: socket.SocketKind.conjugate == builtins.int.conjugate
@: socket.SocketKind.from_bytes == builtins.int.from_bytes
@: socket.SocketKind.to_bytes == builtins.int.to_bytes
# ===== Process class `socket.SocketKind` =====


# ----- Process callable `socket.fromshare` -----
# Match: socket.fromshare: {'regex': True, 'spec_arg': True, 'spec_uri': 'socket([.].+)?'}
@: socket.fromshare

# ----- Process callable `socket._intenum_converter` -----
# Match: socket._intenum_converter: {'regex': False, 'spec_arg': False, 'spec_uri': 'socket._intenum_converter'}
!: socket._intenum_converter

# ----- Process callable `socket.getservbyport` -----
!: socket.getservbyport == _socket.getservbyport

# ----- Process callable `socket.htonl` -----
!: socket.htonl == _socket.htonl

# ----- Process callable `socket.gethostbyaddr` -----
!: socket.gethostbyaddr == _socket.gethostbyaddr

# ----- Process callable `socket.getservbyname` -----
!: socket.getservbyname == _socket.getservbyname

# ----- Process callable `socket.ntohl` -----
!: socket.ntohl == _socket.ntohl
# ===== Process module `socket` =====


# ----- Process module `subprocess` -----
# Match: subprocess: None
!: subprocess

# ----- Process module `xml.parsers` -----
# Match: xml.parsers: None
!: xml.parsers

# ----- Process module `importlib.machinery` -----
# Match: importlib.machinery: None
!: importlib.machinery

# ----- Process module `_collections` -----
# Match: _collections: None
!: _collections

# ----- Process module `pyfiglet.version` -----
# Match: pyfiglet.version: None
!: pyfiglet.version

# ----- Process module `distutils.errors` -----
# Match: distutils.errors: None
!: distutils.errors

# ----- Process module `os` -----
# Match: os: None
!: os

# ----- Process module `site` -----
# Match: site: None
!: site

# ----- Process module `atexit` -----
# Match: atexit: None
!: atexit

# ----- Process module `win32com` -----
# Match: win32com: None
!: win32com

# ----- Process module `tarfile` -----
# Match: tarfile: None
!: tarfile

# ----- Process module `aoiktracecall.plugin.printing_plugin` -----
# Match: aoiktracecall.plugin.printing_plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin.printing_plugin

# ----- Process module `textwrap` -----
# Match: textwrap: None
!: textwrap

# ----- Process module `opcode` -----
# Match: opcode: None
!: opcode

# ----- Process module `ast` -----
# Match: ast: None
!: ast

# ----- Process module `aoiktracecall.logging` -----
# Match: aoiktracecall.logging: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.logging

# ----- Process module `email.iterators` -----
# Match: email.iterators: None
!: email.iterators

# ----- Process module `aoiktracecall.trace` -----
# Match: aoiktracecall.trace: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.trace

# ----- Process module `struct` -----
# Match: struct: None
!: struct

# ----- Process module `pkg_resources.extern.packaging.version` -----
# Match: pkg_resources.extern.packaging.version: None
!: pkg_resources.extern.packaging.version

# ----- Process module `time` -----
# Match: time: None
!: time

# ----- Process module `quopri` -----
# Match: quopri: None
!: quopri

# ----- Process module `importlib._bootstrap_external` -----
# Match: importlib._bootstrap_external: None
!: importlib._bootstrap_external

# ----- Process module `collections` -----
# Match: collections: None
!: collections

# ----- Process module `vext` -----
# Match: vext: None
!: vext

# ----- Process module `optparse` -----
# Match: optparse: None
!: optparse

# ----- Process module `encodings.mbcs` -----
# Match: encodings.mbcs: None
!: encodings.mbcs

# ----- Process module `io` -----
# Match: io: None
!: io

# ----- Process module `pkg_resources.extern.packaging.requirements` -----
# Match: pkg_resources.extern.packaging.requirements: None
!: pkg_resources.extern.packaging.requirements

# ----- Process module `win32api` -----
# Match: win32api: None
!: win32api

# ----- Process module `pkg_resources` -----
# Match: pkg_resources: None
!: pkg_resources

# ----- Process module `pyexpat.model` -----
# Match: pyexpat.model: None
!: pyexpat.model

# ----- Process module `pythoncom` -----
# Match: pythoncom: None
!: pythoncom

# ----- Process module `bz2` -----
# Match: bz2: None
!: bz2

# ----- Process module `urllib.parse` -----
# Match: urllib.parse: None
!: urllib.parse

# ----- Process module `zipfile` -----
# Match: zipfile: None
!: zipfile

# ----- Process module `threading` -----
# Match: threading: None
!: threading

# ----- Process module `email.parser` -----
# Match: email.parser: None
!: email.parser

# ----- Process module `encodings.aliases` -----
# Match: encodings.aliases: None
!: encodings.aliases

# ----- Process module `string` -----
# Match: string: None
!: string

# ----- Process module `traceback` -----
# Match: traceback: None
!: traceback

# ----- Process module `pkg_resources._vendor.six` -----
# Match: pkg_resources._vendor.six: None
!: pkg_resources._vendor.six

# ----- Process module `importlib.abc` -----
# Match: importlib.abc: None
!: importlib.abc

# ----- Process module `_codecs_cn` -----
# Match: _codecs_cn: None
!: _codecs_cn

# ----- Process module `zope` -----
# Match: zope: None
!: zope

# ----- Process module `zipimport` -----
# Match: zipimport: None
!: zipimport

# ----- Process module `_string` -----
# Match: _string: None
!: _string

# ----- Process module `_struct` -----
# Match: _struct: None
!: _struct

# ----- Process module `pkg_resources._vendor.packaging` -----
# Match: pkg_resources._vendor.packaging: None
!: pkg_resources._vendor.packaging

# ----- Process module `_winapi` -----
# Match: _winapi: None
!: _winapi

# ----- Process module `_hashlib` -----
# Match: _hashlib: None
!: _hashlib

# ----- Process module `logging` -----
# Match: logging: None
!: logging

# ----- Process module `_imp` -----
# Match: _imp: None
!: _imp

# ----- Process module `_bz2` -----
# Match: _bz2: None
!: _bz2

# ----- Process module `sre_parse` -----
# Match: sre_parse: None
!: sre_parse

# ----- Process module `_stat` -----
# Match: _stat: None
!: _stat

# ----- Process module `contextlib` -----
# Match: contextlib: None
!: contextlib

# ----- Process module `aoiktracecall.plugin.exception_plugin` -----
# Match: aoiktracecall.plugin.exception_plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin.exception_plugin

# ----- Process module `_functools` -----
# Match: _functools: None
!: _functools

# ----- Process module `email._policybase` -----
# Match: email._policybase: None
!: email._policybase

# ----- Process module `_sitebuiltins` -----
# Match: _sitebuiltins: None
!: _sitebuiltins

# ----- Process module `urllib` -----
# Match: urllib: None
!: urllib

# ----- Process module `aoiktracecall` -----
# Match: aoiktracecall: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall

# ----- Process module `binascii` -----
# Match: binascii: None
!: binascii

# ----- Process module `_heapq` -----
# Match: _heapq: None
!: _heapq

# ----- Process module `locale` -----
# Match: locale: None
!: locale

# ----- Process module `_bootlocale` -----
# Match: _bootlocale: None
!: _bootlocale

# ----- Process module `vext.helpers.sip` -----
# Match: vext.helpers.sip: None
!: vext.helpers.sip

# ----- Process module `_socket` -----
# Match: _socket: None
!: _socket

# ----- Process module `sre_constants` -----
# Match: sre_constants: None
!: sre_constants

# ----- Process module `io` -----
# Match: io: None
!: io

# ----- Process module `email._encoded_words` -----
# Match: email._encoded_words: None
!: email._encoded_words

# ----- Process module `_sre` -----
# Match: _sre: None
!: _sre

# ----- Process module `keyword` -----
# Match: keyword: None
!: keyword

# ----- Process module `aoiktracecall.state` -----
# Match: aoiktracecall.state: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.state

# ----- Process module `copy` -----
# Match: copy: None
!: copy

# ----- Process module `email.charset` -----
# Match: email.charset: None
!: email.charset

# ----- Process module `xml` -----
# Match: xml: None
!: xml

# ----- Process module `tokenize` -----
# Match: tokenize: None
!: tokenize

# ----- Process module `genericpath` -----
# Match: genericpath: None
!: genericpath

# ----- Process module `pkg_resources.extern` -----
# Match: pkg_resources.extern: None
!: pkg_resources.extern

# ----- Process module `mpl_toolkits` -----
# Match: mpl_toolkits: None
!: mpl_toolkits

# ----- Process module `winreg` -----
# Match: winreg: None
!: winreg

# ----- Process module `_opcode` -----
# Match: _opcode: None
!: _opcode

# ----- Process module `pkg_resources.extern.packaging._structures` -----
# Match: pkg_resources.extern.packaging._structures: None
!: pkg_resources.extern.packaging._structures

# ----- Process module `pkg_resources.extern.packaging.markers` -----
# Match: pkg_resources.extern.packaging.markers: None
!: pkg_resources.extern.packaging.markers

# ----- Process module `_operator` -----
# Match: _operator: None
!: _operator

# ----- Process module `pyexpat` -----
# Match: pyexpat: None
!: pyexpat

# ----- Process module `vext.env` -----
# Match: vext.env: None
!: vext.env

# ----- Process module `_lzma` -----
# Match: _lzma: None
!: _lzma

# ----- Process module `uu` -----
# Match: uu: None
!: uu

# ----- Process module `_locale` -----
# Match: _locale: None
!: _locale

# ----- Process module `posixpath` -----
# Match: posixpath: None
!: posixpath

# ----- Process module `hashlib` -----
# Match: hashlib: None
!: hashlib

# ----- Process module `signal` -----
# Match: signal: None
!: signal

# ----- Process module `distutils` -----
# Match: distutils: None
!: distutils

# ----- Process module `aoiktracecall.wrap` -----
# Match: aoiktracecall.wrap: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.wrap

# ----- Process module `vext.helpers` -----
# Match: vext.helpers: None
!: vext.helpers

# ----- Process module `win32com.gen_py` -----
# Match: win32com.gen_py: None
!: win32com.gen_py

# ----- Process module `datetime` -----
# Match: datetime: None
!: datetime

# ----- Process module `importlib._bootstrap` -----
# Match: importlib._bootstrap: None
!: importlib._bootstrap

# ----- Process module `pkg_resources._vendor.six` -----
# Match: pkg_resources._vendor.six: None
!: pkg_resources._vendor.six

# ----- Process module `pyfiglet.fonts` -----
# Match: pyfiglet.fonts: None
!: pyfiglet.fonts

# ----- Process module `selectors` -----
# Match: selectors: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors

# ----- Process class `selectors.BaseSelector` -----
# Match: selectors.BaseSelector: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector

# ---- Search base class `builtins.object` ----
# Match: selectors.BaseSelector.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__delattr__ == builtins.object.__delattr__
# Match: selectors.BaseSelector.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__dir__ == builtins.object.__dir__
# Match: selectors.BaseSelector.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__eq__ == builtins.object.__eq__
# Match: selectors.BaseSelector.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__format__ == builtins.object.__format__
# Match: selectors.BaseSelector.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__ge__ == builtins.object.__ge__
# Match: selectors.BaseSelector.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__getattribute__ == builtins.object.__getattribute__
# Match: selectors.BaseSelector.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__gt__ == builtins.object.__gt__
# Match: selectors.BaseSelector.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__hash__ == builtins.object.__hash__
# Match: selectors.BaseSelector.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__init__ == builtins.object.__init__
# Match: selectors.BaseSelector.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__le__ == builtins.object.__le__
# Match: selectors.BaseSelector.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__lt__ == builtins.object.__lt__
# Match: selectors.BaseSelector.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__ne__ == builtins.object.__ne__
# Match: selectors.BaseSelector.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__new__ == builtins.object.__new__
# Match: selectors.BaseSelector.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__reduce__ == builtins.object.__reduce__
# Match: selectors.BaseSelector.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors.BaseSelector.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__repr__ == builtins.object.__repr__
# Match: selectors.BaseSelector.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors.BaseSelector.__setattr__ == builtins.object.__setattr__
# Match: selectors.BaseSelector.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__sizeof__ == builtins.object.__sizeof__
# Match: selectors.BaseSelector.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__str__ == builtins.object.__str__
# Match: selectors.BaseSelector.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `selectors.BaseSelector` ----
# Match: selectors.BaseSelector.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__enter__
# Match: selectors.BaseSelector.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.BaseSelector.__exit__
# Match: selectors.BaseSelector.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.close
# Match: selectors.BaseSelector.get_key: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.get_key
# Match: selectors.BaseSelector.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.get_map
# Match: selectors.BaseSelector.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.modify
# Match: selectors.BaseSelector.register: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.register
# Match: selectors.BaseSelector.select: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.select
# Match: selectors.BaseSelector.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.BaseSelector.unregister

# ---- Wrap class `selectors.BaseSelector`'s attributes ----
@: selectors.BaseSelector.__setattr__ == builtins.object.__setattr__
@: selectors.BaseSelector.close
@: selectors.BaseSelector.get_key
@: selectors.BaseSelector.get_map
@: selectors.BaseSelector.modify
@: selectors.BaseSelector.register
@: selectors.BaseSelector.select
@: selectors.BaseSelector.unregister
# ===== Process class `selectors.BaseSelector` =====


# ----- Process callable `selectors.abstractmethod` -----
!: selectors.abstractmethod == abc.abstractmethod

# ----- Process class `selectors.SelectorKey` -----
# Match: selectors.SelectorKey: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey

# ---- Search base class `builtins.object` ----
# Match: selectors.SelectorKey.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__delattr__ == builtins.object.__delattr__
# Match: selectors.SelectorKey.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__dir__ == builtins.object.__dir__
# Match: selectors.SelectorKey.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__eq__ == builtins.object.__eq__
# Match: selectors.SelectorKey.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__format__ == builtins.object.__format__
# Match: selectors.SelectorKey.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__ge__ == builtins.object.__ge__
# Match: selectors.SelectorKey.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getattribute__ == builtins.object.__getattribute__
# Match: selectors.SelectorKey.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__gt__ == builtins.object.__gt__
# Match: selectors.SelectorKey.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__hash__ == builtins.object.__hash__
# Match: selectors.SelectorKey.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__init__ == builtins.object.__init__
# Match: selectors.SelectorKey.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__le__ == builtins.object.__le__
# Match: selectors.SelectorKey.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__lt__ == builtins.object.__lt__
# Match: selectors.SelectorKey.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__ne__ == builtins.object.__ne__
# Match: selectors.SelectorKey.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__new__ == builtins.object.__new__
# Match: selectors.SelectorKey.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__reduce__ == builtins.object.__reduce__
# Match: selectors.SelectorKey.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors.SelectorKey.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__repr__ == builtins.object.__repr__
# Match: selectors.SelectorKey.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors.SelectorKey.__setattr__ == builtins.object.__setattr__
# Match: selectors.SelectorKey.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__sizeof__ == builtins.object.__sizeof__
# Match: selectors.SelectorKey.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__str__ == builtins.object.__str__
# Match: selectors.SelectorKey.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `builtins.tuple` ----
# Match: selectors.SelectorKey.__add__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__add__ == builtins.tuple.__add__
# Match: selectors.SelectorKey.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__contains__ == builtins.tuple.__contains__
# Match: selectors.SelectorKey.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__eq__ == builtins.tuple.__eq__
# Match: selectors.SelectorKey.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__ge__ == builtins.tuple.__ge__
# Match: selectors.SelectorKey.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getattribute__ == builtins.tuple.__getattribute__
# Match: selectors.SelectorKey.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getitem__ == builtins.tuple.__getitem__
# Match: selectors.SelectorKey.__getnewargs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getnewargs__ == builtins.tuple.__getnewargs__
# Match: selectors.SelectorKey.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__gt__ == builtins.tuple.__gt__
# Match: selectors.SelectorKey.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__hash__ == builtins.tuple.__hash__
# Match: selectors.SelectorKey.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__iter__ == builtins.tuple.__iter__
# Match: selectors.SelectorKey.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__le__ == builtins.tuple.__le__
# Match: selectors.SelectorKey.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__len__ == builtins.tuple.__len__
# Match: selectors.SelectorKey.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__lt__ == builtins.tuple.__lt__
# Match: selectors.SelectorKey.__mul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__mul__ == builtins.tuple.__mul__
# Match: selectors.SelectorKey.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__ne__ == builtins.tuple.__ne__
# Match: selectors.SelectorKey.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__new__ == builtins.tuple.__new__
# Match: selectors.SelectorKey.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__repr__ == builtins.tuple.__repr__
# Match: selectors.SelectorKey.__rmul__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__rmul__ == builtins.tuple.__rmul__
# Match: selectors.SelectorKey.count: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey.count == builtins.tuple.count
# Match: selectors.SelectorKey.index: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey.index == builtins.tuple.index

# ---- Search class `selectors.SelectorKey` ----
# Match: selectors.SelectorKey.__getnewargs__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__getnewargs__
# Match: selectors.SelectorKey.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.SelectorKey.__repr__
# Match: selectors.SelectorKey._asdict: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey._asdict
# Match: selectors.SelectorKey._replace: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.SelectorKey._replace

# ---- Wrap class `selectors.SelectorKey`'s attributes ----
@: selectors.SelectorKey.__setattr__ == builtins.object.__setattr__
@: selectors.SelectorKey._asdict
@: selectors.SelectorKey._replace
@: selectors.SelectorKey.count == builtins.tuple.count
@: selectors.SelectorKey.index == builtins.tuple.index
# ===== Process class `selectors.SelectorKey` =====


# ----- Process class `selectors.DefaultSelector` -----
# Match: selectors.DefaultSelector: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector

# ---- Search base class `builtins.object` ----
# Match: selectors.DefaultSelector.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__delattr__ == builtins.object.__delattr__
# Match: selectors.DefaultSelector.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__dir__ == builtins.object.__dir__
# Match: selectors.DefaultSelector.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__eq__ == builtins.object.__eq__
# Match: selectors.DefaultSelector.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__format__ == builtins.object.__format__
# Match: selectors.DefaultSelector.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__ge__ == builtins.object.__ge__
# Match: selectors.DefaultSelector.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__getattribute__ == builtins.object.__getattribute__
# Match: selectors.DefaultSelector.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__gt__ == builtins.object.__gt__
# Match: selectors.DefaultSelector.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__hash__ == builtins.object.__hash__
# Match: selectors.DefaultSelector.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.__init__'}
@: selectors.DefaultSelector.__init__ == builtins.object.__init__
# Match: selectors.DefaultSelector.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__le__ == builtins.object.__le__
# Match: selectors.DefaultSelector.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__lt__ == builtins.object.__lt__
# Match: selectors.DefaultSelector.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__ne__ == builtins.object.__ne__
# Match: selectors.DefaultSelector.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__new__ == builtins.object.__new__
# Match: selectors.DefaultSelector.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__reduce__ == builtins.object.__reduce__
# Match: selectors.DefaultSelector.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors.DefaultSelector.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__repr__ == builtins.object.__repr__
# Match: selectors.DefaultSelector.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors.DefaultSelector.__setattr__ == builtins.object.__setattr__
# Match: selectors.DefaultSelector.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__sizeof__ == builtins.object.__sizeof__
# Match: selectors.DefaultSelector.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__str__ == builtins.object.__str__
# Match: selectors.DefaultSelector.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `selectors.BaseSelector` ----
# Match: selectors.DefaultSelector.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__enter__ == selectors.BaseSelector.__enter__
# Match: selectors.DefaultSelector.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors.DefaultSelector.__exit__ == selectors.BaseSelector.__exit__
# Match: selectors.DefaultSelector.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors.DefaultSelector.__setattr__ == builtins.object.__setattr__
# Match: selectors.DefaultSelector.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.close == selectors.BaseSelector.close
# Match: selectors.DefaultSelector.get_key: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.get_key == selectors.BaseSelector.get_key
# Match: selectors.DefaultSelector.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.get_map == selectors.BaseSelector.get_map
# Match: selectors.DefaultSelector.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.modify == selectors.BaseSelector.modify
# Match: selectors.DefaultSelector.register: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.register'}
@: selectors.DefaultSelector.register == selectors.BaseSelector.register
# Match: selectors.DefaultSelector.select: {'regex': False, 'spec_arg': 'hide_tree', 'spec_uri': 'selectors.DefaultSelector.select'}
@: selectors.DefaultSelector.select == selectors.BaseSelector.select
# Match: selectors.DefaultSelector.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.unregister == selectors.BaseSelector.unregister

# ---- Search base class `selectors._BaseSelectorImpl` ----
# Match: selectors.DefaultSelector.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.__init__'}
@: selectors.DefaultSelector.__init__ == selectors._BaseSelectorImpl.__init__
# Match: selectors.DefaultSelector._fileobj_lookup: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector._fileobj_lookup == selectors._BaseSelectorImpl._fileobj_lookup
# Match: selectors.DefaultSelector._key_from_fd: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector._key_from_fd == selectors._BaseSelectorImpl._key_from_fd
# Match: selectors.DefaultSelector.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.close == selectors._BaseSelectorImpl.close
# Match: selectors.DefaultSelector.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.get_map == selectors._BaseSelectorImpl.get_map
# Match: selectors.DefaultSelector.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.modify == selectors._BaseSelectorImpl.modify
# Match: selectors.DefaultSelector.register: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.register'}
@: selectors.DefaultSelector.register == selectors._BaseSelectorImpl.register
# Match: selectors.DefaultSelector.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.unregister == selectors._BaseSelectorImpl.unregister

# ---- Search class `selectors.DefaultSelector` ----
# Match: selectors.DefaultSelector.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.__init__'}
@: selectors.DefaultSelector.__init__ == selectors.SelectSelector.__init__
# Match: selectors.DefaultSelector._select: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector._select == selectors.SelectSelector._select
# Match: selectors.DefaultSelector.register: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': 'selectors.DefaultSelector.register'}
@: selectors.DefaultSelector.register == selectors.SelectSelector.register
# Match: selectors.DefaultSelector.select: {'regex': False, 'spec_arg': 'hide_tree', 'spec_uri': 'selectors.DefaultSelector.select'}
@: selectors.DefaultSelector.select == selectors.SelectSelector.select
# Match: selectors.DefaultSelector.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors.DefaultSelector.unregister == selectors.SelectSelector.unregister

# ---- Wrap class `selectors.DefaultSelector`'s attributes ----
@: selectors.DefaultSelector.__init__ == selectors.SelectSelector.__init__
@: selectors.DefaultSelector.__setattr__ == builtins.object.__setattr__
@: selectors.DefaultSelector._fileobj_lookup == selectors._BaseSelectorImpl._fileobj_lookup
@: selectors.DefaultSelector._key_from_fd == selectors._BaseSelectorImpl._key_from_fd
@: selectors.DefaultSelector._select == selectors.SelectSelector._select
@: selectors.DefaultSelector.close == selectors._BaseSelectorImpl.close
@: selectors.DefaultSelector.get_key == selectors.BaseSelector.get_key
@: selectors.DefaultSelector.get_map == selectors._BaseSelectorImpl.get_map
@: selectors.DefaultSelector.modify == selectors._BaseSelectorImpl.modify
@: selectors.DefaultSelector.register == selectors.SelectSelector.register
@: selectors.DefaultSelector.select == selectors.SelectSelector.select
@: selectors.DefaultSelector.unregister == selectors.SelectSelector.unregister
# ===== Process class `selectors.DefaultSelector` =====


# ----- Process class `selectors._SelectorMapping` -----
# Match: selectors._SelectorMapping: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping

# ---- Search base class `builtins.object` ----
# Match: selectors._SelectorMapping.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__delattr__ == builtins.object.__delattr__
# Match: selectors._SelectorMapping.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__dir__ == builtins.object.__dir__
# Match: selectors._SelectorMapping.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__eq__ == builtins.object.__eq__
# Match: selectors._SelectorMapping.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__format__ == builtins.object.__format__
# Match: selectors._SelectorMapping.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__ge__ == builtins.object.__ge__
# Match: selectors._SelectorMapping.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__getattribute__ == builtins.object.__getattribute__
# Match: selectors._SelectorMapping.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__gt__ == builtins.object.__gt__
# Match: selectors._SelectorMapping.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__hash__ == builtins.object.__hash__
# Match: selectors._SelectorMapping.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__init__ == builtins.object.__init__
# Match: selectors._SelectorMapping.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__le__ == builtins.object.__le__
# Match: selectors._SelectorMapping.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__lt__ == builtins.object.__lt__
# Match: selectors._SelectorMapping.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__ne__ == builtins.object.__ne__
# Match: selectors._SelectorMapping.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__new__ == builtins.object.__new__
# Match: selectors._SelectorMapping.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__reduce__ == builtins.object.__reduce__
# Match: selectors._SelectorMapping.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors._SelectorMapping.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__repr__ == builtins.object.__repr__
# Match: selectors._SelectorMapping.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors._SelectorMapping.__setattr__ == builtins.object.__setattr__
# Match: selectors._SelectorMapping.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__sizeof__ == builtins.object.__sizeof__
# Match: selectors._SelectorMapping.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__str__ == builtins.object.__str__
# Match: selectors._SelectorMapping.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `collections.abc.Container` ----
# Match: selectors._SelectorMapping.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__contains__ == collections.abc.Container.__contains__

# ---- Search base class `collections.abc.Iterable` ----
# Match: selectors._SelectorMapping.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__iter__ == collections.abc.Iterable.__iter__

# ---- Search base class `collections.abc.Sized` ----
# Match: selectors._SelectorMapping.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__len__ == collections.abc.Sized.__len__

# ---- Search base class `collections.abc.Mapping` ----
# Match: selectors._SelectorMapping.__contains__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__contains__ == collections.abc.Mapping.__contains__
# Match: selectors._SelectorMapping.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__eq__ == collections.abc.Mapping.__eq__
# Match: selectors._SelectorMapping.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__getitem__ == collections.abc.Mapping.__getitem__
# Match: selectors._SelectorMapping.get: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping.get == collections.abc.Mapping.get
# Match: selectors._SelectorMapping.items: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping.items == collections.abc.Mapping.items
# Match: selectors._SelectorMapping.keys: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping.keys == collections.abc.Mapping.keys
# Match: selectors._SelectorMapping.values: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._SelectorMapping.values == collections.abc.Mapping.values

# ---- Search class `selectors._SelectorMapping` ----
# Match: selectors._SelectorMapping.__getitem__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__getitem__
# Match: selectors._SelectorMapping.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__init__
# Match: selectors._SelectorMapping.__iter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__iter__
# Match: selectors._SelectorMapping.__len__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._SelectorMapping.__len__

# ---- Wrap class `selectors._SelectorMapping`'s attributes ----
@: selectors._SelectorMapping.__setattr__ == builtins.object.__setattr__
@: selectors._SelectorMapping.get == collections.abc.Mapping.get
@: selectors._SelectorMapping.items == collections.abc.Mapping.items
@: selectors._SelectorMapping.keys == collections.abc.Mapping.keys
@: selectors._SelectorMapping.values == collections.abc.Mapping.values
# ===== Process class `selectors._SelectorMapping` =====


# ----- Process callable `selectors._fileobj_to_fd` -----
# Match: selectors._fileobj_to_fd: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._fileobj_to_fd

# ----- Process class `selectors.Mapping` -----
!: selectors.Mapping == collections.abc.Mapping

# ----- Process class `selectors._BaseSelectorImpl` -----
# Match: selectors._BaseSelectorImpl: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl

# ---- Search base class `builtins.object` ----
# Match: selectors._BaseSelectorImpl.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__delattr__ == builtins.object.__delattr__
# Match: selectors._BaseSelectorImpl.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__dir__ == builtins.object.__dir__
# Match: selectors._BaseSelectorImpl.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__eq__ == builtins.object.__eq__
# Match: selectors._BaseSelectorImpl.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__format__ == builtins.object.__format__
# Match: selectors._BaseSelectorImpl.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__ge__ == builtins.object.__ge__
# Match: selectors._BaseSelectorImpl.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__getattribute__ == builtins.object.__getattribute__
# Match: selectors._BaseSelectorImpl.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__gt__ == builtins.object.__gt__
# Match: selectors._BaseSelectorImpl.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__hash__ == builtins.object.__hash__
# Match: selectors._BaseSelectorImpl.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__init__ == builtins.object.__init__
# Match: selectors._BaseSelectorImpl.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__le__ == builtins.object.__le__
# Match: selectors._BaseSelectorImpl.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__lt__ == builtins.object.__lt__
# Match: selectors._BaseSelectorImpl.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__ne__ == builtins.object.__ne__
# Match: selectors._BaseSelectorImpl.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__new__ == builtins.object.__new__
# Match: selectors._BaseSelectorImpl.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__reduce__ == builtins.object.__reduce__
# Match: selectors._BaseSelectorImpl.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: selectors._BaseSelectorImpl.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__repr__ == builtins.object.__repr__
# Match: selectors._BaseSelectorImpl.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors._BaseSelectorImpl.__setattr__ == builtins.object.__setattr__
# Match: selectors._BaseSelectorImpl.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__sizeof__ == builtins.object.__sizeof__
# Match: selectors._BaseSelectorImpl.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__str__ == builtins.object.__str__
# Match: selectors._BaseSelectorImpl.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `selectors.BaseSelector` ----
# Match: selectors._BaseSelectorImpl.__enter__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__enter__ == selectors.BaseSelector.__enter__
# Match: selectors._BaseSelectorImpl.__exit__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__exit__ == selectors.BaseSelector.__exit__
# Match: selectors._BaseSelectorImpl.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: selectors._BaseSelectorImpl.__setattr__ == builtins.object.__setattr__
# Match: selectors._BaseSelectorImpl.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.close == selectors.BaseSelector.close
# Match: selectors._BaseSelectorImpl.get_key: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.get_key == selectors.BaseSelector.get_key
# Match: selectors._BaseSelectorImpl.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.get_map == selectors.BaseSelector.get_map
# Match: selectors._BaseSelectorImpl.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.modify == selectors.BaseSelector.modify
# Match: selectors._BaseSelectorImpl.register: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.register == selectors.BaseSelector.register
# Match: selectors._BaseSelectorImpl.select: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.select == selectors.BaseSelector.select
# Match: selectors._BaseSelectorImpl.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.unregister == selectors.BaseSelector.unregister

# ---- Search class `selectors._BaseSelectorImpl` ----
# Match: selectors._BaseSelectorImpl.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': 'selectors[.].+[.]__[^.]+__'}
!: selectors._BaseSelectorImpl.__init__
# Match: selectors._BaseSelectorImpl._fileobj_lookup: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl._fileobj_lookup
# Match: selectors._BaseSelectorImpl._key_from_fd: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl._key_from_fd
# Match: selectors._BaseSelectorImpl.close: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.close
# Match: selectors._BaseSelectorImpl.get_map: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.get_map
# Match: selectors._BaseSelectorImpl.modify: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.modify
# Match: selectors._BaseSelectorImpl.register: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.register
# Match: selectors._BaseSelectorImpl.unregister: {'regex': True, 'spec_arg': True, 'spec_uri': 'selectors([.].+)?'}
@: selectors._BaseSelectorImpl.unregister

# ---- Wrap class `selectors._BaseSelectorImpl`'s attributes ----
@: selectors._BaseSelectorImpl.__setattr__ == builtins.object.__setattr__
@: selectors._BaseSelectorImpl._fileobj_lookup
@: selectors._BaseSelectorImpl._key_from_fd
@: selectors._BaseSelectorImpl.close
@: selectors._BaseSelectorImpl.get_key == selectors.BaseSelector.get_key
@: selectors._BaseSelectorImpl.get_map
@: selectors._BaseSelectorImpl.modify
@: selectors._BaseSelectorImpl.register
@: selectors._BaseSelectorImpl.select == selectors.BaseSelector.select
@: selectors._BaseSelectorImpl.unregister
# ===== Process class `selectors._BaseSelectorImpl` =====


# ----- Process class `selectors.ABCMeta` -----
!: selectors.ABCMeta == abc.ABCMeta

# ----- Process callable `selectors.namedtuple` -----
!: selectors.namedtuple == collections.namedtuple

# ----- Process class `selectors.SelectSelector` -----
# Match: selectors.SelectSelector: {'regex': False, 'spec_arg': False, 'spec_uri': 'selectors.SelectSelector'}
!: selectors.SelectSelector
# ===== Process module `selectors` =====


# ----- Process module `email.header` -----
# Match: email.header: None
!: email.header

# ----- Process module `aoiktracecall.spec` -----
# Match: aoiktracecall.spec: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.spec

# ----- Process module `email.quoprimime` -----
# Match: email.quoprimime: None
!: email.quoprimime

# ----- Process module `email.message` -----
# Match: email.message: None
!: email.message

# ----- Process module `re` -----
# Match: re: None
!: re

# ----- Process module `stat` -----
# Match: stat: None
!: stat

# ----- Process module `email._parseaddr` -----
# Match: email._parseaddr: None
!: email._parseaddr

# ----- Process module `vext.registry` -----
# Match: vext.registry: None
!: vext.registry

# ----- Process module `gettext` -----
# Match: gettext: None
!: gettext

# ----- Process module `email.errors` -----
# Match: email.errors: None
!: email.errors

# ----- Process module `tempfile` -----
# Match: tempfile: None
!: tempfile

# ----- Process module `pkg_resources.extern.packaging.specifiers` -----
# Match: pkg_resources.extern.packaging.specifiers: None
!: pkg_resources.extern.packaging.specifiers

# ----- Process module `pkg_resources._vendor.pyparsing` -----
# Match: pkg_resources._vendor.pyparsing: None
!: pkg_resources._vendor.pyparsing

# ----- Process module `pyfiglet` -----
# Match: pyfiglet: None
!: pyfiglet

# ----- Process module `warnings` -----
# Match: warnings: None
!: warnings

# ----- Process module `pprint` -----
# Match: pprint: None
!: pprint

# ----- Process module `marshal` -----
# Match: marshal: None
!: marshal

# ----- Process module `pkg_resources._vendor.six.moves.urllib` -----
# Match: pkg_resources._vendor.six.moves.urllib: None
!: pkg_resources._vendor.six.moves.urllib

# ----- Process module `imp` -----
# Match: imp: None
!: imp

# ----- Process module `nt` -----
# Match: nt: None
!: nt

# ----- Process module `pkg_resources.extern.packaging._compat` -----
# Match: pkg_resources.extern.packaging._compat: None
!: pkg_resources.extern.packaging._compat

# ----- Process module `sre_compile` -----
# Match: sre_compile: None
!: sre_compile

# ----- Process module `pkg_resources._vendor.six.moves` -----
# Match: pkg_resources._vendor.six.moves: None
!: pkg_resources._vendor.six.moves

# ----- Process module `sys` -----
# Match: sys: None
!: sys

# ----- Process module `pkg_resources._vendor.six.moves` -----
# Match: pkg_resources._vendor.six.moves: None
!: pkg_resources._vendor.six.moves

# ----- Process module `email.utils` -----
# Match: email.utils: None
!: email.utils

# ----- Process module `zlib` -----
# Match: zlib: None
!: zlib

# ----- Process module `aoiktracecall.plugin.figlet_plugin` -----
# Match: aoiktracecall.plugin.figlet_plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin.figlet_plugin

# ----- Process module `aoiktracecall.plugin.showhide_plugin` -----
# Match: aoiktracecall.plugin.showhide_plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin.showhide_plugin

# ----- Process module `email.base64mime` -----
# Match: email.base64mime: None
!: email.base64mime

# ----- Process module `enum` -----
# Match: enum: None
!: enum

# ----- Process module `pyexpat.errors` -----
# Match: pyexpat.errors: None
!: pyexpat.errors

# ----- Process module `codecs` -----
# Match: codecs: None
!: codecs

# ----- Process module `ntpath` -----
# Match: ntpath: None
!: ntpath

# ----- Process module `functools` -----
# Match: functools: None
!: functools

# ----- Process module `types` -----
# Match: types: None
!: types

# ----- Process module `abc` -----
# Match: abc: None
!: abc

# ----- Process module `encodings.latin_1` -----
# Match: encodings.latin_1: None
!: encodings.latin_1

# ----- Process module `msvcrt` -----
# Match: msvcrt: None
!: msvcrt

# ----- Process module `errno` -----
# Match: errno: None
!: errno

# ----- Process module `importlib` -----
# Match: importlib: None
!: importlib

# ----- Process module `glob` -----
# Match: glob: None
!: glob

# ----- Process module `encodings.gbk` -----
# Match: encodings.gbk: None
!: encodings.gbk

# ----- Process module `email` -----
# Match: email: None
!: email

# ----- Process module `collections.abc` -----
# Match: collections.abc: None
!: collections.abc

# ----- Process module `ntpath` -----
# Match: ntpath: None
!: ntpath

# ----- Process module `aoiktracecall.plugin` -----
# Match: aoiktracecall.plugin: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.plugin

# ----- Process module `fnmatch` -----
# Match: fnmatch: None
!: fnmatch

# ----- Process module `_datetime` -----
# Match: _datetime: None
!: _datetime

# ----- Process module `_thread` -----
# Match: _thread: None
!: _thread

# ----- Process module `__future__` -----
# Match: __future__: None
!: __future__

# ----- Process module `collections.abc` -----
# Match: collections.abc: None
!: collections.abc

# ----- Process module `importlib._bootstrap` -----
# Match: importlib._bootstrap: None
!: importlib._bootstrap

# ----- Process module `shutil` -----
# Match: shutil: None
!: shutil

# ----- Process module `_weakrefset` -----
# Match: _weakrefset: None
!: _weakrefset

# ----- Process module `aoiktracecall.importer` -----
# Match: aoiktracecall.importer: {'regex': True, 'spec_arg': False, 'spec_uri': 'aoiktracecall([.].+)?'}
!: aoiktracecall.importer

# ----- Process module `weakref` -----
# Match: weakref: None
!: weakref

# ----- Process module `_compression` -----
# Match: _compression: None
!: _compression

# ----- Process module `base64` -----
# Match: base64: None
!: base64

# ----- Process module `pkg_resources._vendor.appdirs` -----
# Match: pkg_resources._vendor.appdirs: None
!: pkg_resources._vendor.appdirs

# ----- Process module `itertools` -----
# Match: itertools: None
!: itertools

# ----- Process module `vext.gatekeeper` -----
# Match: vext.gatekeeper: None
!: vext.gatekeeper

# ----- Process module `lzma` -----
# Match: lzma: None
!: lzma

# ----- Process module `math` -----
# Match: math: None
!: math

# ----- Process module `copyreg` -----
# Match: copyreg: None
!: copyreg

# ----- Process module `win32com.shell` -----
# Match: win32com.shell: None
!: win32com.shell

# ----- Process module `select` -----
# Match: select: None
!: select

# ----- Process module `_ast` -----
# Match: _ast: None
!: _ast

# ----- Process module `_signal` -----
# Match: _signal: None
!: _signal

# ----- Process module `_win32sysloader` -----
# Match: _win32sysloader: None
!: _win32sysloader

# ----- Process module `_multibytecodec` -----
# Match: _multibytecodec: None
!: _multibytecodec

# ----- Process module `plistlib` -----
# Match: plistlib: None
!: plistlib

# ----- Process module `importlib.util` -----
# Match: importlib.util: None
!: importlib.util

# ----- Process module `pyexpat.errors` -----
# Match: pyexpat.errors: None
!: pyexpat.errors

# ----- Process module `encodings` -----
# Match: encodings: None
!: encodings

# ----- Process module `calendar` -----
# Match: calendar: None
!: calendar

# ----- Process module `email.feedparser` -----
# Match: email.feedparser: None
!: email.feedparser

# ----- Process module `pkg_resources._vendor.packaging.__about__` -----
# Match: pkg_resources._vendor.packaging.__about__: None
!: pkg_resources._vendor.packaging.__about__

# ----- Process module `_warnings` -----
# Match: _warnings: None
!: _warnings

# ----- Process module `distutils.sysconfig` -----
# Match: distutils.sysconfig: None
!: distutils.sysconfig

# ----- Process module `pkgutil` -----
# Match: pkgutil: None
!: pkgutil

# ----- Process module `_weakref` -----
# Match: _weakref: None
!: _weakref

# ----- Process module `builtins` -----
# Match: builtins: None
!: builtins

# ----- Process module `email.encoders` -----
# Match: email.encoders: None
!: email.encoders

# ----- Process module `operator` -----
# Match: operator: None
!: operator
         _____ ___             ___            _                                   _ _         _                                           
        |_   _/ _ \           / _ \          | |_ _ __ __ _  ___ ___     ___ __ _| | |___    (_)_ __      ___ _ __   ___  ___ ___         
 _____    | || | | |  _____  | | | |  _____  | __| '__/ _` |/ __/ _ \   / __/ _` | | / __|   | | '_ \    / __| '_ \ / _ \/ __/ __|  _____ 
|_____|   | || |_| | |_____| | |_| | |_____| | |_| | | (_| | (_|  __/  | (_| (_| | | \__ \   | | | | |   \__ \ |_) |  __/ (__\__ \ |_____|
          |_| \___/           \___/           \__|_|  \__,_|\___\___|___\___\__,_|_|_|___/___|_|_| |_|___|___/ .__/ \___|\___|___/        
                                                                   |_____|              |_____|     |_____|  |_|                          

+ T0 + * socketserver +
- T0 - * socketserver -

# ----- Process module `socketserver` -----
# Match: socketserver: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver

# ----- Process class `socketserver.ForkingUDPServer` -----
# Match: socketserver.ForkingUDPServer: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.ForkingUDPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ForkingUDPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.ForkingUDPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.ForkingUDPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__format__ == builtins.object.__format__
# Match: socketserver.ForkingUDPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.ForkingUDPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ForkingUDPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.ForkingUDPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.ForkingUDPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__init__ == builtins.object.__init__
# Match: socketserver.ForkingUDPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__le__ == builtins.object.__le__
# Match: socketserver.ForkingUDPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.ForkingUDPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.ForkingUDPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__new__ == builtins.object.__new__
# Match: socketserver.ForkingUDPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ForkingUDPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ForkingUDPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.ForkingUDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ForkingUDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ForkingUDPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ForkingUDPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__str__ == builtins.object.__str__
# Match: socketserver.ForkingUDPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.ForkingUDPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.ForkingUDPServer._handle_request_noblock: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ForkingUDPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.ForkingUDPServer.finish_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ForkingUDPServer.handle_error: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ForkingUDPServer.handle_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ForkingUDPServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ForkingUDPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ForkingUDPServer.serve_forever: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ForkingUDPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.ForkingUDPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.ForkingUDPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.ForkingUDPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.ForkingUDPServer.shutdown: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ForkingUDPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.ForkingUDPServer.verify_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.ForkingUDPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingUDPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ForkingUDPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.ForkingUDPServer.fileno: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ForkingUDPServer.get_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.ForkingUDPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.ForkingUDPServer.server_bind: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ForkingUDPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ForkingUDPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.shutdown_request == socketserver.TCPServer.shutdown_request

# ---- Search base class `socketserver.UDPServer` ----
# Match: socketserver.ForkingUDPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.close_request == socketserver.UDPServer.close_request
# Match: socketserver.ForkingUDPServer.get_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.get_request == socketserver.UDPServer.get_request
# Match: socketserver.ForkingUDPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.server_activate == socketserver.UDPServer.server_activate
# Match: socketserver.ForkingUDPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.shutdown_request == socketserver.UDPServer.shutdown_request

# ---- Search base class `socketserver.ForkingMixIn` ----
# Match: socketserver.ForkingUDPServer.collect_children: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.collect_children == socketserver.ForkingMixIn.collect_children
# Match: socketserver.ForkingUDPServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.handle_timeout == socketserver.ForkingMixIn.handle_timeout
# Match: socketserver.ForkingUDPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingUDPServer.process_request == socketserver.ForkingMixIn.process_request
# Match: socketserver.ForkingUDPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.ForkingUDPServer.service_actions == socketserver.ForkingMixIn.service_actions

# ---- Search class `socketserver.ForkingUDPServer` ----

# ---- Wrap class `socketserver.ForkingUDPServer`'s attributes ----
@: socketserver.ForkingUDPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.ForkingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.ForkingUDPServer.close_request == socketserver.UDPServer.close_request
@: socketserver.ForkingUDPServer.collect_children == socketserver.ForkingMixIn.collect_children
@: socketserver.ForkingUDPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.ForkingUDPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.ForkingUDPServer.get_request == socketserver.UDPServer.get_request
@: socketserver.ForkingUDPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.ForkingUDPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.ForkingUDPServer.handle_timeout == socketserver.ForkingMixIn.handle_timeout
@: socketserver.ForkingUDPServer.process_request == socketserver.ForkingMixIn.process_request
@: socketserver.ForkingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.ForkingUDPServer.server_activate == socketserver.UDPServer.server_activate
@: socketserver.ForkingUDPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.ForkingUDPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.ForkingUDPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.ForkingUDPServer.shutdown_request == socketserver.UDPServer.shutdown_request
@: socketserver.ForkingUDPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.ForkingUDPServer` =====


# ----- Process class `socketserver.UDPServer` -----
# Match: socketserver.UDPServer: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.UDPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.UDPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.UDPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.UDPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__format__ == builtins.object.__format__
# Match: socketserver.UDPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.UDPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.UDPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.UDPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.UDPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__init__ == builtins.object.__init__
# Match: socketserver.UDPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__le__ == builtins.object.__le__
# Match: socketserver.UDPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.UDPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.UDPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__new__ == builtins.object.__new__
# Match: socketserver.UDPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.UDPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.UDPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.UDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.UDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.UDPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.UDPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__str__ == builtins.object.__str__
# Match: socketserver.UDPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.UDPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.UDPServer._handle_request_noblock: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.UDPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.UDPServer.finish_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.UDPServer.handle_error: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.UDPServer.handle_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.UDPServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.UDPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.UDPServer.serve_forever: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.UDPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.UDPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.UDPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.UDPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.UDPServer.shutdown: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.UDPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.UDPServer.verify_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.UDPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.UDPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.UDPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.UDPServer.fileno: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.UDPServer.get_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.UDPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.UDPServer.server_bind: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.UDPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.UDPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.shutdown_request == socketserver.TCPServer.shutdown_request

# ---- Search class `socketserver.UDPServer` ----
# Match: socketserver.UDPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.close_request
# Match: socketserver.UDPServer.get_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.get_request
# Match: socketserver.UDPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.server_activate
# Match: socketserver.UDPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.UDPServer.shutdown_request

# ---- Wrap class `socketserver.UDPServer`'s attributes ----
@: socketserver.UDPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.UDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.UDPServer.close_request
@: socketserver.UDPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.UDPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.UDPServer.get_request
@: socketserver.UDPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.UDPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.UDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: socketserver.UDPServer.process_request == socketserver.BaseServer.process_request
@: socketserver.UDPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.UDPServer.server_activate
@: socketserver.UDPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.UDPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.UDPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.UDPServer.shutdown_request
@: socketserver.UDPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.UDPServer` =====


# ----- Process class `socketserver.StreamRequestHandler` -----
# Match: socketserver.StreamRequestHandler: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler

# ---- Search base class `builtins.object` ----
# Match: socketserver.StreamRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: socketserver.StreamRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__dir__ == builtins.object.__dir__
# Match: socketserver.StreamRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__eq__ == builtins.object.__eq__
# Match: socketserver.StreamRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__format__ == builtins.object.__format__
# Match: socketserver.StreamRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__ge__ == builtins.object.__ge__
# Match: socketserver.StreamRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.StreamRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__gt__ == builtins.object.__gt__
# Match: socketserver.StreamRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__hash__ == builtins.object.__hash__
# Match: socketserver.StreamRequestHandler.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__init__ == builtins.object.__init__
# Match: socketserver.StreamRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__le__ == builtins.object.__le__
# Match: socketserver.StreamRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__lt__ == builtins.object.__lt__
# Match: socketserver.StreamRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__ne__ == builtins.object.__ne__
# Match: socketserver.StreamRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__new__ == builtins.object.__new__
# Match: socketserver.StreamRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: socketserver.StreamRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.StreamRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__repr__ == builtins.object.__repr__
# Match: socketserver.StreamRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.StreamRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: socketserver.StreamRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.StreamRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__str__ == builtins.object.__str__
# Match: socketserver.StreamRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseRequestHandler` ----
# Match: socketserver.StreamRequestHandler.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.StreamRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: socketserver.StreamRequestHandler.finish: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.finish == socketserver.BaseRequestHandler.finish
# Match: socketserver.StreamRequestHandler.handle: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: socketserver.StreamRequestHandler.setup: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.setup == socketserver.BaseRequestHandler.setup

# ---- Search class `socketserver.StreamRequestHandler` ----
# Match: socketserver.StreamRequestHandler.finish: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.finish
# Match: socketserver.StreamRequestHandler.setup: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.StreamRequestHandler.setup

# ---- Wrap class `socketserver.StreamRequestHandler`'s attributes ----
@: socketserver.StreamRequestHandler.__setattr__ == builtins.object.__setattr__
@: socketserver.StreamRequestHandler.finish
@: socketserver.StreamRequestHandler.handle == socketserver.BaseRequestHandler.handle
@: socketserver.StreamRequestHandler.setup
# ===== Process class `socketserver.StreamRequestHandler` =====


# ----- Process class `socketserver.ThreadingUDPServer` -----
# Match: socketserver.ThreadingUDPServer: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.ThreadingUDPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ThreadingUDPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.ThreadingUDPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.ThreadingUDPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__format__ == builtins.object.__format__
# Match: socketserver.ThreadingUDPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.ThreadingUDPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ThreadingUDPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.ThreadingUDPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.ThreadingUDPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__init__ == builtins.object.__init__
# Match: socketserver.ThreadingUDPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__le__ == builtins.object.__le__
# Match: socketserver.ThreadingUDPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.ThreadingUDPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.ThreadingUDPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__new__ == builtins.object.__new__
# Match: socketserver.ThreadingUDPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ThreadingUDPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ThreadingUDPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.ThreadingUDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingUDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingUDPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ThreadingUDPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__str__ == builtins.object.__str__
# Match: socketserver.ThreadingUDPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.ThreadingUDPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.ThreadingUDPServer._handle_request_noblock: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ThreadingUDPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.ThreadingUDPServer.finish_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ThreadingUDPServer.handle_error: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ThreadingUDPServer.handle_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ThreadingUDPServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ThreadingUDPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ThreadingUDPServer.serve_forever: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ThreadingUDPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.ThreadingUDPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.ThreadingUDPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.ThreadingUDPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.ThreadingUDPServer.shutdown: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ThreadingUDPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.ThreadingUDPServer.verify_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.ThreadingUDPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingUDPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ThreadingUDPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.ThreadingUDPServer.fileno: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ThreadingUDPServer.get_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.ThreadingUDPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.ThreadingUDPServer.server_bind: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ThreadingUDPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ThreadingUDPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown_request == socketserver.TCPServer.shutdown_request

# ---- Search base class `socketserver.UDPServer` ----
# Match: socketserver.ThreadingUDPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingUDPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingUDPServer._handle_request_noblock: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ThreadingUDPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.close_request == socketserver.UDPServer.close_request
# Match: socketserver.ThreadingUDPServer.fileno: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ThreadingUDPServer.finish_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ThreadingUDPServer.get_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.get_request == socketserver.UDPServer.get_request
# Match: socketserver.ThreadingUDPServer.handle_error: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ThreadingUDPServer.handle_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ThreadingUDPServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ThreadingUDPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ThreadingUDPServer.serve_forever: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ThreadingUDPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_activate == socketserver.UDPServer.server_activate
# Match: socketserver.ThreadingUDPServer.server_bind: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ThreadingUDPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ThreadingUDPServer.shutdown: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ThreadingUDPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.shutdown_request == socketserver.UDPServer.shutdown_request
# Match: socketserver.ThreadingUDPServer.verify_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.ThreadingMixIn` ----
# Match: socketserver.ThreadingUDPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.process_request == socketserver.ThreadingMixIn.process_request
# Match: socketserver.ThreadingUDPServer.process_request_thread: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingUDPServer.process_request_thread == socketserver.ThreadingMixIn.process_request_thread

# ---- Search class `socketserver.ThreadingUDPServer` ----

# ---- Wrap class `socketserver.ThreadingUDPServer`'s attributes ----
@: socketserver.ThreadingUDPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.ThreadingUDPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.ThreadingUDPServer.close_request == socketserver.UDPServer.close_request
@: socketserver.ThreadingUDPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.ThreadingUDPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.ThreadingUDPServer.get_request == socketserver.UDPServer.get_request
@: socketserver.ThreadingUDPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.ThreadingUDPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.ThreadingUDPServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: socketserver.ThreadingUDPServer.process_request == socketserver.ThreadingMixIn.process_request
@: socketserver.ThreadingUDPServer.process_request_thread == socketserver.ThreadingMixIn.process_request_thread
@: socketserver.ThreadingUDPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.ThreadingUDPServer.server_activate == socketserver.UDPServer.server_activate
@: socketserver.ThreadingUDPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.ThreadingUDPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.ThreadingUDPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.ThreadingUDPServer.shutdown_request == socketserver.UDPServer.shutdown_request
@: socketserver.ThreadingUDPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.ThreadingUDPServer` =====


# ----- Process class `socketserver.ThreadingTCPServer` -----
# Match: socketserver.ThreadingTCPServer: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.ThreadingTCPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ThreadingTCPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.ThreadingTCPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.ThreadingTCPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__format__ == builtins.object.__format__
# Match: socketserver.ThreadingTCPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.ThreadingTCPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ThreadingTCPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.ThreadingTCPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.ThreadingTCPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__init__ == builtins.object.__init__
# Match: socketserver.ThreadingTCPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__le__ == builtins.object.__le__
# Match: socketserver.ThreadingTCPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.ThreadingTCPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.ThreadingTCPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__new__ == builtins.object.__new__
# Match: socketserver.ThreadingTCPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ThreadingTCPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ThreadingTCPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.ThreadingTCPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingTCPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingTCPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ThreadingTCPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__str__ == builtins.object.__str__
# Match: socketserver.ThreadingTCPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.ThreadingTCPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.ThreadingTCPServer._handle_request_noblock: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ThreadingTCPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.ThreadingTCPServer.finish_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ThreadingTCPServer.handle_error: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ThreadingTCPServer.handle_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ThreadingTCPServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ThreadingTCPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ThreadingTCPServer.serve_forever: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ThreadingTCPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.ThreadingTCPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.ThreadingTCPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.ThreadingTCPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.ThreadingTCPServer.shutdown: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ThreadingTCPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.ThreadingTCPServer.verify_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.ThreadingTCPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingTCPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ThreadingTCPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.ThreadingTCPServer.fileno: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ThreadingTCPServer.get_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.ThreadingTCPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.ThreadingTCPServer.server_bind: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ThreadingTCPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ThreadingTCPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.shutdown_request == socketserver.TCPServer.shutdown_request

# ---- Search base class `socketserver.ThreadingMixIn` ----
# Match: socketserver.ThreadingTCPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.process_request == socketserver.ThreadingMixIn.process_request
# Match: socketserver.ThreadingTCPServer.process_request_thread: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingTCPServer.process_request_thread == socketserver.ThreadingMixIn.process_request_thread

# ---- Search class `socketserver.ThreadingTCPServer` ----

# ---- Wrap class `socketserver.ThreadingTCPServer`'s attributes ----
@: socketserver.ThreadingTCPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.ThreadingTCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.ThreadingTCPServer.close_request == socketserver.TCPServer.close_request
@: socketserver.ThreadingTCPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.ThreadingTCPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.ThreadingTCPServer.get_request == socketserver.TCPServer.get_request
@: socketserver.ThreadingTCPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.ThreadingTCPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.ThreadingTCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: socketserver.ThreadingTCPServer.process_request == socketserver.ThreadingMixIn.process_request
@: socketserver.ThreadingTCPServer.process_request_thread == socketserver.ThreadingMixIn.process_request_thread
@: socketserver.ThreadingTCPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.ThreadingTCPServer.server_activate == socketserver.TCPServer.server_activate
@: socketserver.ThreadingTCPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.ThreadingTCPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.ThreadingTCPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.ThreadingTCPServer.shutdown_request == socketserver.TCPServer.shutdown_request
@: socketserver.ThreadingTCPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.ThreadingTCPServer` =====


# ----- Process class `socketserver.ForkingTCPServer` -----
# Match: socketserver.ForkingTCPServer: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.ForkingTCPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ForkingTCPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.ForkingTCPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.ForkingTCPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__format__ == builtins.object.__format__
# Match: socketserver.ForkingTCPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.ForkingTCPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ForkingTCPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.ForkingTCPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.ForkingTCPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__init__ == builtins.object.__init__
# Match: socketserver.ForkingTCPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__le__ == builtins.object.__le__
# Match: socketserver.ForkingTCPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.ForkingTCPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.ForkingTCPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__new__ == builtins.object.__new__
# Match: socketserver.ForkingTCPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ForkingTCPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ForkingTCPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.ForkingTCPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ForkingTCPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ForkingTCPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ForkingTCPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__str__ == builtins.object.__str__
# Match: socketserver.ForkingTCPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.ForkingTCPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.ForkingTCPServer._handle_request_noblock: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.ForkingTCPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.ForkingTCPServer.finish_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.ForkingTCPServer.handle_error: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.ForkingTCPServer.handle_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.ForkingTCPServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.ForkingTCPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.ForkingTCPServer.serve_forever: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.ForkingTCPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.ForkingTCPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.ForkingTCPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.ForkingTCPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.ForkingTCPServer.shutdown: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.ForkingTCPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.ForkingTCPServer.verify_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search base class `socketserver.TCPServer` ----
# Match: socketserver.ForkingTCPServer.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingTCPServer.__init__ == socketserver.TCPServer.__init__
# Match: socketserver.ForkingTCPServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.close_request == socketserver.TCPServer.close_request
# Match: socketserver.ForkingTCPServer.fileno: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.fileno == socketserver.TCPServer.fileno
# Match: socketserver.ForkingTCPServer.get_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.get_request == socketserver.TCPServer.get_request
# Match: socketserver.ForkingTCPServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_activate == socketserver.TCPServer.server_activate
# Match: socketserver.ForkingTCPServer.server_bind: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_bind == socketserver.TCPServer.server_bind
# Match: socketserver.ForkingTCPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.server_close == socketserver.TCPServer.server_close
# Match: socketserver.ForkingTCPServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.shutdown_request == socketserver.TCPServer.shutdown_request

# ---- Search base class `socketserver.ForkingMixIn` ----
# Match: socketserver.ForkingTCPServer.collect_children: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.collect_children == socketserver.ForkingMixIn.collect_children
# Match: socketserver.ForkingTCPServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.handle_timeout == socketserver.ForkingMixIn.handle_timeout
# Match: socketserver.ForkingTCPServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingTCPServer.process_request == socketserver.ForkingMixIn.process_request
# Match: socketserver.ForkingTCPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.ForkingTCPServer.service_actions == socketserver.ForkingMixIn.service_actions

# ---- Search class `socketserver.ForkingTCPServer` ----

# ---- Wrap class `socketserver.ForkingTCPServer`'s attributes ----
@: socketserver.ForkingTCPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.ForkingTCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.ForkingTCPServer.close_request == socketserver.TCPServer.close_request
@: socketserver.ForkingTCPServer.collect_children == socketserver.ForkingMixIn.collect_children
@: socketserver.ForkingTCPServer.fileno == socketserver.TCPServer.fileno
@: socketserver.ForkingTCPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.ForkingTCPServer.get_request == socketserver.TCPServer.get_request
@: socketserver.ForkingTCPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.ForkingTCPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.ForkingTCPServer.handle_timeout == socketserver.ForkingMixIn.handle_timeout
@: socketserver.ForkingTCPServer.process_request == socketserver.ForkingMixIn.process_request
@: socketserver.ForkingTCPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.ForkingTCPServer.server_activate == socketserver.TCPServer.server_activate
@: socketserver.ForkingTCPServer.server_bind == socketserver.TCPServer.server_bind
@: socketserver.ForkingTCPServer.server_close == socketserver.TCPServer.server_close
@: socketserver.ForkingTCPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.ForkingTCPServer.shutdown_request == socketserver.TCPServer.shutdown_request
@: socketserver.ForkingTCPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.ForkingTCPServer` =====


# ----- Process class `socketserver.ThreadingMixIn` -----
# Match: socketserver.ThreadingMixIn: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingMixIn

# ---- Search base class `builtins.object` ----
# Match: socketserver.ThreadingMixIn.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ThreadingMixIn.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__dir__ == builtins.object.__dir__
# Match: socketserver.ThreadingMixIn.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__eq__ == builtins.object.__eq__
# Match: socketserver.ThreadingMixIn.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__format__ == builtins.object.__format__
# Match: socketserver.ThreadingMixIn.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__ge__ == builtins.object.__ge__
# Match: socketserver.ThreadingMixIn.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ThreadingMixIn.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__gt__ == builtins.object.__gt__
# Match: socketserver.ThreadingMixIn.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__hash__ == builtins.object.__hash__
# Match: socketserver.ThreadingMixIn.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__init__ == builtins.object.__init__
# Match: socketserver.ThreadingMixIn.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__le__ == builtins.object.__le__
# Match: socketserver.ThreadingMixIn.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__lt__ == builtins.object.__lt__
# Match: socketserver.ThreadingMixIn.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__ne__ == builtins.object.__ne__
# Match: socketserver.ThreadingMixIn.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__new__ == builtins.object.__new__
# Match: socketserver.ThreadingMixIn.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ThreadingMixIn.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ThreadingMixIn.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__repr__ == builtins.object.__repr__
# Match: socketserver.ThreadingMixIn.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ThreadingMixIn.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ThreadingMixIn.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ThreadingMixIn.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__str__ == builtins.object.__str__
# Match: socketserver.ThreadingMixIn.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ThreadingMixIn.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `socketserver.ThreadingMixIn` ----
# Match: socketserver.ThreadingMixIn.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingMixIn.process_request
# Match: socketserver.ThreadingMixIn.process_request_thread: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ThreadingMixIn.process_request_thread

# ---- Wrap class `socketserver.ThreadingMixIn`'s attributes ----
@: socketserver.ThreadingMixIn.__setattr__ == builtins.object.__setattr__
@: socketserver.ThreadingMixIn.process_request
@: socketserver.ThreadingMixIn.process_request_thread
# ===== Process class `socketserver.ThreadingMixIn` =====


# ----- Process class `socketserver.BaseRequestHandler` -----
# Match: socketserver.BaseRequestHandler: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler

# ---- Search base class `builtins.object` ----
# Match: socketserver.BaseRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: socketserver.BaseRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__dir__ == builtins.object.__dir__
# Match: socketserver.BaseRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__eq__ == builtins.object.__eq__
# Match: socketserver.BaseRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__format__ == builtins.object.__format__
# Match: socketserver.BaseRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__ge__ == builtins.object.__ge__
# Match: socketserver.BaseRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.BaseRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__gt__ == builtins.object.__gt__
# Match: socketserver.BaseRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__hash__ == builtins.object.__hash__
# Match: socketserver.BaseRequestHandler.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__init__ == builtins.object.__init__
# Match: socketserver.BaseRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__le__ == builtins.object.__le__
# Match: socketserver.BaseRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__lt__ == builtins.object.__lt__
# Match: socketserver.BaseRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__ne__ == builtins.object.__ne__
# Match: socketserver.BaseRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__new__ == builtins.object.__new__
# Match: socketserver.BaseRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: socketserver.BaseRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.BaseRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__repr__ == builtins.object.__repr__
# Match: socketserver.BaseRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.BaseRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: socketserver.BaseRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.BaseRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__str__ == builtins.object.__str__
# Match: socketserver.BaseRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `socketserver.BaseRequestHandler` ----
# Match: socketserver.BaseRequestHandler.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseRequestHandler.__init__
# Match: socketserver.BaseRequestHandler.finish: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler.finish
# Match: socketserver.BaseRequestHandler.handle: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler.handle
# Match: socketserver.BaseRequestHandler.setup: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseRequestHandler.setup

# ---- Wrap class `socketserver.BaseRequestHandler`'s attributes ----
@: socketserver.BaseRequestHandler.__setattr__ == builtins.object.__setattr__
@: socketserver.BaseRequestHandler.finish
@: socketserver.BaseRequestHandler.handle
@: socketserver.BaseRequestHandler.setup
# ===== Process class `socketserver.BaseRequestHandler` =====


# ----- Process callable `socketserver.time` -----
!: socketserver.time == time.time

# ----- Process class `socketserver._ServerSelector` -----
!: socketserver._ServerSelector == selectors._ServerSelector

# ----- Process class `socketserver.ForkingMixIn` -----
# Match: socketserver.ForkingMixIn: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingMixIn

# ---- Search base class `builtins.object` ----
# Match: socketserver.ForkingMixIn.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__delattr__ == builtins.object.__delattr__
# Match: socketserver.ForkingMixIn.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__dir__ == builtins.object.__dir__
# Match: socketserver.ForkingMixIn.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__eq__ == builtins.object.__eq__
# Match: socketserver.ForkingMixIn.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__format__ == builtins.object.__format__
# Match: socketserver.ForkingMixIn.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__ge__ == builtins.object.__ge__
# Match: socketserver.ForkingMixIn.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.ForkingMixIn.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__gt__ == builtins.object.__gt__
# Match: socketserver.ForkingMixIn.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__hash__ == builtins.object.__hash__
# Match: socketserver.ForkingMixIn.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__init__ == builtins.object.__init__
# Match: socketserver.ForkingMixIn.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__le__ == builtins.object.__le__
# Match: socketserver.ForkingMixIn.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__lt__ == builtins.object.__lt__
# Match: socketserver.ForkingMixIn.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__ne__ == builtins.object.__ne__
# Match: socketserver.ForkingMixIn.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__new__ == builtins.object.__new__
# Match: socketserver.ForkingMixIn.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__reduce__ == builtins.object.__reduce__
# Match: socketserver.ForkingMixIn.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.ForkingMixIn.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__repr__ == builtins.object.__repr__
# Match: socketserver.ForkingMixIn.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.ForkingMixIn.__setattr__ == builtins.object.__setattr__
# Match: socketserver.ForkingMixIn.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.ForkingMixIn.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__str__ == builtins.object.__str__
# Match: socketserver.ForkingMixIn.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.ForkingMixIn.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `socketserver.ForkingMixIn` ----
# Match: socketserver.ForkingMixIn.collect_children: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingMixIn.collect_children
# Match: socketserver.ForkingMixIn.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingMixIn.handle_timeout
# Match: socketserver.ForkingMixIn.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.ForkingMixIn.process_request
# Match: socketserver.ForkingMixIn.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.ForkingMixIn.service_actions

# ---- Wrap class `socketserver.ForkingMixIn`'s attributes ----
@: socketserver.ForkingMixIn.__setattr__ == builtins.object.__setattr__
@: socketserver.ForkingMixIn.collect_children
@: socketserver.ForkingMixIn.handle_timeout
@: socketserver.ForkingMixIn.process_request
# ===== Process class `socketserver.ForkingMixIn` =====


# ----- Process class `socketserver.TCPServer` -----
# Match: socketserver.TCPServer: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.TCPServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.TCPServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__dir__ == builtins.object.__dir__
# Match: socketserver.TCPServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__eq__ == builtins.object.__eq__
# Match: socketserver.TCPServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__format__ == builtins.object.__format__
# Match: socketserver.TCPServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__ge__ == builtins.object.__ge__
# Match: socketserver.TCPServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.TCPServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__gt__ == builtins.object.__gt__
# Match: socketserver.TCPServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__hash__ == builtins.object.__hash__
# Match: socketserver.TCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.__init__'}
@: socketserver.TCPServer.__init__ == builtins.object.__init__
# Match: socketserver.TCPServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__le__ == builtins.object.__le__
# Match: socketserver.TCPServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__lt__ == builtins.object.__lt__
# Match: socketserver.TCPServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__ne__ == builtins.object.__ne__
# Match: socketserver.TCPServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__new__ == builtins.object.__new__
# Match: socketserver.TCPServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.TCPServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.TCPServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__repr__ == builtins.object.__repr__
# Match: socketserver.TCPServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.TCPServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.TCPServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.TCPServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__str__ == builtins.object.__str__
# Match: socketserver.TCPServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.TCPServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseServer` ----
# Match: socketserver.TCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.__init__'}
@: socketserver.TCPServer.__init__ == socketserver.BaseServer.__init__
# Match: socketserver.TCPServer._handle_request_noblock: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer._handle_request_noblock'}
@: socketserver.TCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
# Match: socketserver.TCPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.close_request'}
@: socketserver.TCPServer.close_request == socketserver.BaseServer.close_request
# Match: socketserver.TCPServer.finish_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.finish_request'}
@: socketserver.TCPServer.finish_request == socketserver.BaseServer.finish_request
# Match: socketserver.TCPServer.handle_error: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.handle_error == socketserver.BaseServer.handle_error
# Match: socketserver.TCPServer.handle_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.handle_request == socketserver.BaseServer.handle_request
# Match: socketserver.TCPServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
# Match: socketserver.TCPServer.process_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.process_request'}
@: socketserver.TCPServer.process_request == socketserver.BaseServer.process_request
# Match: socketserver.TCPServer.serve_forever: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.serve_forever'}
@: socketserver.TCPServer.serve_forever == socketserver.BaseServer.serve_forever
# Match: socketserver.TCPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.server_activate'}
@: socketserver.TCPServer.server_activate == socketserver.BaseServer.server_activate
# Match: socketserver.TCPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.server_close == socketserver.BaseServer.server_close
# Match: socketserver.TCPServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.TCPServer.service_actions == socketserver.BaseServer.service_actions
# Match: socketserver.TCPServer.shutdown: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.shutdown == socketserver.BaseServer.shutdown
# Match: socketserver.TCPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.shutdown_request'}
@: socketserver.TCPServer.shutdown_request == socketserver.BaseServer.shutdown_request
# Match: socketserver.TCPServer.verify_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.verify_request'}
@: socketserver.TCPServer.verify_request == socketserver.BaseServer.verify_request

# ---- Search class `socketserver.TCPServer` ----
# Match: socketserver.TCPServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.__init__'}
@: socketserver.TCPServer.__init__
# Match: socketserver.TCPServer.close_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.close_request'}
@: socketserver.TCPServer.close_request
# Match: socketserver.TCPServer.fileno: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.fileno
# Match: socketserver.TCPServer.get_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.get_request'}
@: socketserver.TCPServer.get_request
# Match: socketserver.TCPServer.server_activate: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.server_activate'}
@: socketserver.TCPServer.server_activate
# Match: socketserver.TCPServer.server_bind: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.server_bind'}
@: socketserver.TCPServer.server_bind
# Match: socketserver.TCPServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.TCPServer.server_close
# Match: socketserver.TCPServer.shutdown_request: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).TCPServer.shutdown_request'}
@: socketserver.TCPServer.shutdown_request

# ---- Wrap class `socketserver.TCPServer`'s attributes ----
@: socketserver.TCPServer.__init__
@: socketserver.TCPServer.__setattr__ == builtins.object.__setattr__
@: socketserver.TCPServer._handle_request_noblock == socketserver.BaseServer._handle_request_noblock
@: socketserver.TCPServer.close_request
@: socketserver.TCPServer.fileno
@: socketserver.TCPServer.finish_request == socketserver.BaseServer.finish_request
@: socketserver.TCPServer.get_request
@: socketserver.TCPServer.handle_error == socketserver.BaseServer.handle_error
@: socketserver.TCPServer.handle_request == socketserver.BaseServer.handle_request
@: socketserver.TCPServer.handle_timeout == socketserver.BaseServer.handle_timeout
@: socketserver.TCPServer.process_request == socketserver.BaseServer.process_request
@: socketserver.TCPServer.serve_forever == socketserver.BaseServer.serve_forever
@: socketserver.TCPServer.server_activate
@: socketserver.TCPServer.server_bind
@: socketserver.TCPServer.server_close
@: socketserver.TCPServer.shutdown == socketserver.BaseServer.shutdown
@: socketserver.TCPServer.shutdown_request
@: socketserver.TCPServer.verify_request == socketserver.BaseServer.verify_request
# ===== Process class `socketserver.TCPServer` =====


# ----- Process class `socketserver.BaseServer` -----
# Match: socketserver.BaseServer: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer

# ---- Search base class `builtins.object` ----
# Match: socketserver.BaseServer.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__delattr__ == builtins.object.__delattr__
# Match: socketserver.BaseServer.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__dir__ == builtins.object.__dir__
# Match: socketserver.BaseServer.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__eq__ == builtins.object.__eq__
# Match: socketserver.BaseServer.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__format__ == builtins.object.__format__
# Match: socketserver.BaseServer.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__ge__ == builtins.object.__ge__
# Match: socketserver.BaseServer.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.BaseServer.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__gt__ == builtins.object.__gt__
# Match: socketserver.BaseServer.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__hash__ == builtins.object.__hash__
# Match: socketserver.BaseServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).BaseServer.__init__'}
@: socketserver.BaseServer.__init__ == builtins.object.__init__
# Match: socketserver.BaseServer.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__le__ == builtins.object.__le__
# Match: socketserver.BaseServer.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__lt__ == builtins.object.__lt__
# Match: socketserver.BaseServer.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__ne__ == builtins.object.__ne__
# Match: socketserver.BaseServer.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__new__ == builtins.object.__new__
# Match: socketserver.BaseServer.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__reduce__ == builtins.object.__reduce__
# Match: socketserver.BaseServer.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.BaseServer.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__repr__ == builtins.object.__repr__
# Match: socketserver.BaseServer.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.BaseServer.__setattr__ == builtins.object.__setattr__
# Match: socketserver.BaseServer.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.BaseServer.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__str__ == builtins.object.__str__
# Match: socketserver.BaseServer.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.BaseServer.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search class `socketserver.BaseServer` ----
# Match: socketserver.BaseServer.__init__: {'regex': True, 'spec_arg': {'highlight'}, 'spec_uri': '(socketserver|SocketServer).BaseServer.__init__'}
@: socketserver.BaseServer.__init__
# Match: socketserver.BaseServer._handle_request_noblock: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer._handle_request_noblock
# Match: socketserver.BaseServer.close_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.close_request
# Match: socketserver.BaseServer.finish_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.finish_request
# Match: socketserver.BaseServer.handle_error: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.handle_error
# Match: socketserver.BaseServer.handle_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.handle_request
# Match: socketserver.BaseServer.handle_timeout: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.handle_timeout
# Match: socketserver.BaseServer.process_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.process_request
# Match: socketserver.BaseServer.serve_forever: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.serve_forever
# Match: socketserver.BaseServer.server_activate: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.server_activate
# Match: socketserver.BaseServer.server_close: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.server_close
# Match: socketserver.BaseServer.service_actions: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]service_actions'}
!: socketserver.BaseServer.service_actions
# Match: socketserver.BaseServer.shutdown: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.shutdown
# Match: socketserver.BaseServer.shutdown_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.shutdown_request
# Match: socketserver.BaseServer.verify_request: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.BaseServer.verify_request

# ---- Wrap class `socketserver.BaseServer`'s attributes ----
@: socketserver.BaseServer.__init__
@: socketserver.BaseServer.__setattr__ == builtins.object.__setattr__
@: socketserver.BaseServer._handle_request_noblock
@: socketserver.BaseServer.close_request
@: socketserver.BaseServer.finish_request
@: socketserver.BaseServer.handle_error
@: socketserver.BaseServer.handle_request
@: socketserver.BaseServer.handle_timeout
@: socketserver.BaseServer.process_request
@: socketserver.BaseServer.serve_forever
@: socketserver.BaseServer.server_activate
@: socketserver.BaseServer.server_close
@: socketserver.BaseServer.shutdown
@: socketserver.BaseServer.shutdown_request
@: socketserver.BaseServer.verify_request
# ===== Process class `socketserver.BaseServer` =====


# ----- Process class `socketserver.DatagramRequestHandler` -----
# Match: socketserver.DatagramRequestHandler: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler

# ---- Search base class `builtins.object` ----
# Match: socketserver.DatagramRequestHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__delattr__ == builtins.object.__delattr__
# Match: socketserver.DatagramRequestHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__dir__ == builtins.object.__dir__
# Match: socketserver.DatagramRequestHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__eq__ == builtins.object.__eq__
# Match: socketserver.DatagramRequestHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__format__ == builtins.object.__format__
# Match: socketserver.DatagramRequestHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__ge__ == builtins.object.__ge__
# Match: socketserver.DatagramRequestHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__getattribute__ == builtins.object.__getattribute__
# Match: socketserver.DatagramRequestHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__gt__ == builtins.object.__gt__
# Match: socketserver.DatagramRequestHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__hash__ == builtins.object.__hash__
# Match: socketserver.DatagramRequestHandler.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__init__ == builtins.object.__init__
# Match: socketserver.DatagramRequestHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__le__ == builtins.object.__le__
# Match: socketserver.DatagramRequestHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__lt__ == builtins.object.__lt__
# Match: socketserver.DatagramRequestHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__ne__ == builtins.object.__ne__
# Match: socketserver.DatagramRequestHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__new__ == builtins.object.__new__
# Match: socketserver.DatagramRequestHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__reduce__ == builtins.object.__reduce__
# Match: socketserver.DatagramRequestHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: socketserver.DatagramRequestHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__repr__ == builtins.object.__repr__
# Match: socketserver.DatagramRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.DatagramRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: socketserver.DatagramRequestHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__sizeof__ == builtins.object.__sizeof__
# Match: socketserver.DatagramRequestHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__str__ == builtins.object.__str__
# Match: socketserver.DatagramRequestHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseRequestHandler` ----
# Match: socketserver.DatagramRequestHandler.__init__: {'regex': True, 'spec_arg': False, 'spec_uri': '(socketserver|SocketServer)[.].+[.]__[^.]+__'}
!: socketserver.DatagramRequestHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: socketserver.DatagramRequestHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: socketserver.DatagramRequestHandler.__setattr__ == builtins.object.__setattr__
# Match: socketserver.DatagramRequestHandler.finish: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.finish == socketserver.BaseRequestHandler.finish
# Match: socketserver.DatagramRequestHandler.handle: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.handle == socketserver.BaseRequestHandler.handle
# Match: socketserver.DatagramRequestHandler.setup: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.setup == socketserver.BaseRequestHandler.setup

# ---- Search class `socketserver.DatagramRequestHandler` ----
# Match: socketserver.DatagramRequestHandler.finish: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.finish
# Match: socketserver.DatagramRequestHandler.setup: {'regex': True, 'spec_arg': True, 'spec_uri': '(socketserver|SocketServer)([.].+)?'}
@: socketserver.DatagramRequestHandler.setup

# ---- Wrap class `socketserver.DatagramRequestHandler`'s attributes ----
@: socketserver.DatagramRequestHandler.__setattr__ == builtins.object.__setattr__
@: socketserver.DatagramRequestHandler.finish
@: socketserver.DatagramRequestHandler.handle == socketserver.BaseRequestHandler.handle
@: socketserver.DatagramRequestHandler.setup
# ===== Process class `socketserver.DatagramRequestHandler` =====

# ===== Process module `socketserver` =====


# ----- Process module `__main__` -----
# Match: __main__: {'regex': True, 'spec_arg': True, 'spec_uri': '__main__([.].+)?'}
@: __main__

# ----- Process class `__main__.CustomHandler` -----
# Match: __main__.CustomHandler: {'regex': False, 'spec_arg': True, 'spec_uri': '__main__.CustomHandler'}
@: __main__.CustomHandler

# ---- Search base class `builtins.object` ----
# Match: __main__.CustomHandler.__delattr__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__delattr__ == builtins.object.__delattr__
# Match: __main__.CustomHandler.__dir__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__dir__ == builtins.object.__dir__
# Match: __main__.CustomHandler.__eq__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__eq__ == builtins.object.__eq__
# Match: __main__.CustomHandler.__format__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__format__ == builtins.object.__format__
# Match: __main__.CustomHandler.__ge__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__ge__ == builtins.object.__ge__
# Match: __main__.CustomHandler.__getattribute__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__getattribute__ == builtins.object.__getattribute__
# Match: __main__.CustomHandler.__gt__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__gt__ == builtins.object.__gt__
# Match: __main__.CustomHandler.__hash__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__hash__ == builtins.object.__hash__
# Match: __main__.CustomHandler.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.__init__'}
@: __main__.CustomHandler.__init__ == builtins.object.__init__
# Match: __main__.CustomHandler.__le__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__le__ == builtins.object.__le__
# Match: __main__.CustomHandler.__lt__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__lt__ == builtins.object.__lt__
# Match: __main__.CustomHandler.__ne__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__ne__ == builtins.object.__ne__
# Match: __main__.CustomHandler.__new__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__new__ == builtins.object.__new__
# Match: __main__.CustomHandler.__reduce__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__reduce__ == builtins.object.__reduce__
# Match: __main__.CustomHandler.__reduce_ex__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__reduce_ex__ == builtins.object.__reduce_ex__
# Match: __main__.CustomHandler.__repr__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__repr__ == builtins.object.__repr__
# Match: __main__.CustomHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: __main__.CustomHandler.__setattr__ == builtins.object.__setattr__
# Match: __main__.CustomHandler.__sizeof__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__sizeof__ == builtins.object.__sizeof__
# Match: __main__.CustomHandler.__str__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__str__ == builtins.object.__str__
# Match: __main__.CustomHandler.__subclasshook__: {'regex': True, 'spec_arg': False, 'spec_uri': '__main__[.].+[.]__[^.]+__'}
!: __main__.CustomHandler.__subclasshook__ == builtins.object.__subclasshook__

# ---- Search base class `socketserver.BaseRequestHandler` ----
# Match: __main__.CustomHandler.__init__: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.__init__'}
@: __main__.CustomHandler.__init__ == socketserver.BaseRequestHandler.__init__
# Match: __main__.CustomHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: __main__.CustomHandler.__setattr__ == builtins.object.__setattr__
# Match: __main__.CustomHandler.finish: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.finish'}
@: __main__.CustomHandler.finish == socketserver.BaseRequestHandler.finish
# Match: __main__.CustomHandler.handle: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.handle'}
@: __main__.CustomHandler.handle == socketserver.BaseRequestHandler.handle
# Match: __main__.CustomHandler.setup: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.setup'}
@: __main__.CustomHandler.setup == socketserver.BaseRequestHandler.setup

# ---- Search base class `socketserver.StreamRequestHandler` ----
# Match: __main__.CustomHandler.__setattr__: {'regex': True, 'spec_arg': True, 'spec_uri': '.+[.]__setattr__'}
@: __main__.CustomHandler.__setattr__ == builtins.object.__setattr__
# Match: __main__.CustomHandler.finish: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.finish'}
@: __main__.CustomHandler.finish == socketserver.StreamRequestHandler.finish
# Match: __main__.CustomHandler.handle: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.handle'}
@: __main__.CustomHandler.handle == socketserver.BaseRequestHandler.handle
# Match: __main__.CustomHandler.setup: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.setup'}
@: __main__.CustomHandler.setup == socketserver.StreamRequestHandler.setup

# ---- Search class `__main__.CustomHandler` ----
# Match: __main__.CustomHandler.handle: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.CustomHandler.handle'}
@: __main__.CustomHandler.handle

# ---- Wrap class `__main__.CustomHandler`'s attributes ----
@: __main__.CustomHandler.__init__ == socketserver.BaseRequestHandler.__init__
@: __main__.CustomHandler.__setattr__ == builtins.object.__setattr__
@: __main__.CustomHandler.finish == socketserver.StreamRequestHandler.finish
@: __main__.CustomHandler.handle
@: __main__.CustomHandler.setup == socketserver.StreamRequestHandler.setup
# ===== Process class `__main__.CustomHandler` =====


# ----- Process callable `__main__.main` -----
# Match: __main__.main: {'regex': False, 'spec_arg': {'highlight'}, 'spec_uri': '__main__.main'}
@: __main__.main
# ===== Process module `__main__` =====

         _____ ___            _                           _               
   _    |_   _/ _ \     _    / |    _     _ __ ___   __ _(_)_ __      _   
 _| |_    | || | | |  _| |_  | |  _| |_  | '_ ` _ \ / _` | | '_ \   _| |_ 
|_   _|   | || |_| | |_   _| | | |_   _| | | | | | | (_| | | | | | |_   _|
  |_|     |_| \___/    |_|   |_|   |_|   |_| |_| |_|\__,_|_|_| |_|   |_|  
                                                                          

+ T0: 1: __main__.main => 
                 _____ ___            ____            _____ ____ ____  ____                                     _       _ _                      
           _    |_   _/ _ \     _    |___ \     _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __          (_)_ __ (_) |_                _   
         _| |_    | || | | |  _| |_    __) |  _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__|         | | '_ \| | __|             _| |_ 
        |_   _|   | || |_| | |_   _|  / __/  |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _          | | | | | | |_             |_   _|
          |_|     |_| \___/    |_|   |_____|   |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                    |_____|_____|           |_____|_____|        
        
        + T0: 2: socketserver.TCPServer.__init__ => ( server_address=('127.0.0.1', 8000), RequestHandlerClass=<class '__main__.CustomHandler'>, bind_and_activate=True )
                         _____ ___            _____           ____                 ____                                     _       _ _                      
                   _    |_   _/ _ \     _    |___ /     _    | __ )  __ _ ___  ___/ ___|  ___ _ ____   _____ _ __          (_)_ __ (_) |_                _   
                 _| |_    | || | | |  _| |_    |_ \   _| |_  |  _ \ / _` / __|/ _ \___ \ / _ \ '__\ \ / / _ \ '__|         | | '_ \| | __|             _| |_ 
                |_   _|   | || |_| | |_   _|  ___) | |_   _| | |_) | (_| \__ \  __/___) |  __/ |   \ V /  __/ | _          | | | | | | |_             |_   _|
                  |_|     |_| \___/    |_|   |____/    |_|   |____/ \__,_|___/\___|____/ \___|_|    \_/ \___|_|(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                                |_____|_____|           |_____|_____|        
                
                + T0: 3: socketserver.TCPServer.__init__ -> socketserver.BaseServer.__init__ => ( server_address=('127.0.0.1', 8000), RequestHandlerClass=<class '__main__.CustomHandler'> )
                        + T0: 4: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ => ( name='server_address', value=('127.0.0.1', 8000) )
                        - T0: 4: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 5: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ => ( name='RequestHandlerClass', value=<class '__main__.CustomHandler'> )
                        - T0: 5: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 6: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ => ( name='_BaseServer__is_shut_down', value=<threading.Event object at 0x0000021D60FD5AC8> )
                        - T0: 6: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 7: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ => ( name='_BaseServer__shutdown_request', value=False )
                        - T0: 7: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ <= None
                - T0: 3: socketserver.TCPServer.__init__ -> socketserver.BaseServer.__init__ <= None
                         _____ ___            _____           ____                 ____                                     _       _ _                      
                        |_   _/ _ \          |___ /          | __ )  __ _ ___  ___/ ___|  ___ _ ____   _____ _ __          (_)_ __ (_) |_                    
                 _____    | || | | |  _____    |_ \   _____  |  _ \ / _` / __|/ _ \___ \ / _ \ '__\ \ / / _ \ '__|         | | '_ \| | __|             _____ 
                |_____|   | || |_| | |_____|  ___) | |_____| | |_) | (_| \__ \  __/___) |  __/ |   \ V /  __/ | _          | | | | | | |_             |_____|
                          |_| \___/          |____/          |____/ \__,_|___/\___|____/ \___|_|    \_/ \___|_|(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                                |_____|_____|           |_____|_____|        
                
                         _____ ___             ___                           _        _               _       _ _                      
                   _    |_   _/ _ \     _     ( _ )     _     ___  ___   ___| | _____| |_            (_)_ __ (_) |_                _   
                 _| |_    | || | | |  _| |_   / _ \   _| |_  / __|/ _ \ / __| |/ / _ \ __|           | | '_ \| | __|             _| |_ 
                |_   _|   | || |_| | |_   _| | (_) | |_   _| \__ \ (_) | (__|   <  __/ |_ _          | | | | | | |_             |_   _|
                  |_|     |_| \___/    |_|    \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                          |_____|_____|           |_____|_____|        
                
                + T0: 8: socket.socket.__init__ => ( family=<AddressFamily.AF_INET: 2>, type=<SocketKind.SOCK_STREAM: 1>, proto=0, fileno=None )
                        + T0: 9: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=0 )
                        - T0: 9: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 10: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_closed', value=False )
                        - T0: 10: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                - T0: 8: socket.socket.__init__ <= None
                         _____ ___             ___                           _        _               _       _ _                      
                        |_   _/ _ \           ( _ )           ___  ___   ___| | _____| |_            (_)_ __ (_) |_                    
                 _____    | || | | |  _____   / _ \   _____  / __|/ _ \ / __| |/ / _ \ __|           | | '_ \| | __|             _____ 
                |_____|   | || |_| | |_____| | (_) | |_____| \__ \ (_) | (__|   <  __/ |_ _          | | | | | | |_             |_____|
                          |_| \___/           \___/          |___/\___/ \___|_|\_\___|\__(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                          |_____|_____|           |_____|_____|        
                
                + T0: 11: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ => ( name='socket', value=<socket.socket fd=820, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0> )
                - T0: 11: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ <= None
                         _____ ___            _ ____            _____ ____ ____  ____                                                         _     _           _         
                   _    |_   _/ _ \     _    / |___ \     _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __ | |__ (_)_ __   __| |    _   
                 _| |_    | || | | |  _| |_  | | __) |  _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|| '_ \| | '_ \ / _` |  _| |_ 
                |_   _|   | || |_| | |_   _| | |/ __/  |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |   | |_) | | | | | (_| | |_   _|
                  |_|     |_| \___/    |_|   |_|_____|   |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___|_.__/|_|_| |_|\__,_|   |_|  
                                                                                                                                        |_____|                           
                
                + T0: 12: socketserver.TCPServer.server_bind => 
                                 _____ ___            _ _____                          _        _     _     _           _         
                           _    |_   _/ _ \     _    / |___ /     _     ___  ___   ___| | _____| |_  | |__ (_)_ __   __| |    _   
                         _| |_    | || | | |  _| |_  | | |_ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| | '_ \| | '_ \ / _` |  _| |_ 
                        |_   _|   | || |_| | |_   _| | |___) | |_   _| \__ \ (_) | (__|   <  __/ |_ _| |_) | | | | | (_| | |_   _|
                          |_|     |_| \___/    |_|   |_|____/    |_|   |___/\___/ \___|_|\_\___|\__(_)_.__/|_|_| |_|\__,_|   |_|  
                                                                                                                                  
                        
                        + T0: 13: socket.socket.bind -> _socket.socket.bind => ( <socket.socket fd=820, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0>, ('127.0.0.1', 8000) )
                        - T0: 13: socket.socket.bind -> _socket.socket.bind <= None
                                 _____ ___            _ _____                          _        _     _     _           _         
                                |_   _/ _ \          / |___ /           ___  ___   ___| | _____| |_  | |__ (_)_ __   __| |        
                         _____    | || | | |  _____  | | |_ \   _____  / __|/ _ \ / __| |/ / _ \ __| | '_ \| | '_ \ / _` |  _____ 
                        |_____|   | || |_| | |_____| | |___) | |_____| \__ \ (_) | (__|   <  __/ |_ _| |_) | | | | | (_| | |_____|
                                  |_| \___/          |_|____/          |___/\___/ \___|_|\_\___|\__(_)_.__/|_|_| |_|\__,_|        
                                                                                                                                  
                        
                        + T0: 14: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ => ( name='server_address', value=('127.0.0.1', 8000) )
                        - T0: 14: socketserver.TCPServer.__setattr__ -> builtins.object.__setattr__ <= None
                - T0: 12: socketserver.TCPServer.server_bind <= None
                         _____ ___            _ ____            _____ ____ ____  ____                                                         _     _           _         
                        |_   _/ _ \          / |___ \          |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __ | |__ (_)_ __   __| |        
                 _____    | || | | |  _____  | | __) |  _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|| '_ \| | '_ \ / _` |  _____ 
                |_____|   | || |_| | |_____| | |/ __/  |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |   | |_) | | | | | (_| | |_____|
                          |_| \___/          |_|_____|           |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___|_.__/|_|_| |_|\__,_|        
                                                                                                                                        |_____|                           
                
                         _____ ___            _ ____            _____ ____ ____  ____                                                                   _   _            _               
                   _    |_   _/ _ \     _    / | ___|     _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __  __ _  ___| |_(_)_   ____ _| |_ ___     _   
                 _| |_    | || | | |  _| |_  | |___ \   _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|/ _` |/ __| __| \ \ / / _` | __/ _ \  _| |_ 
                |_   _|   | || |_| | |_   _| | |___) | |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |  | (_| | (__| |_| |\ V / (_| | ||  __/ |_   _|
                  |_|     |_| \___/    |_|   |_|____/    |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___\__,_|\___|\__|_| \_/ \__,_|\__\___|   |_|  
                                                                                                                                        |_____|                                          
                
                + T0: 15: socketserver.TCPServer.server_activate => 
                                 _____ ___            _  __                            _        _     _ _     _                     
                           _    |_   _/ _ \     _    / |/ /_      _     ___  ___   ___| | _____| |_  | (_)___| |_ ___ _ __      _   
                         _| |_    | || | | |  _| |_  | | '_ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| | | / __| __/ _ \ '_ \   _| |_ 
                        |_   _|   | || |_| | |_   _| | | (_) | |_   _| \__ \ (_) | (__|   <  __/ |_ _| | \__ \ ||  __/ | | | |_   _|
                          |_|     |_| \___/    |_|   |_|\___/    |_|   |___/\___/ \___|_|\_\___|\__(_)_|_|___/\__\___|_| |_|   |_|  
                                                                                                                                    
                        
                        + T0: 16: socket.socket.listen -> _socket.socket.listen => ( <socket.socket fd=820, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000)>, 5 )
                        - T0: 16: socket.socket.listen -> _socket.socket.listen <= None
                                 _____ ___            _  __                            _        _     _ _     _                     
                                |_   _/ _ \          / |/ /_            ___  ___   ___| | _____| |_  | (_)___| |_ ___ _ __          
                         _____    | || | | |  _____  | | '_ \   _____  / __|/ _ \ / __| |/ / _ \ __| | | / __| __/ _ \ '_ \   _____ 
                        |_____|   | || |_| | |_____| | | (_) | |_____| \__ \ (_) | (__|   <  __/ |_ _| | \__ \ ||  __/ | | | |_____|
                                  |_| \___/          |_|\___/          |___/\___/ \___|_|\_\___|\__(_)_|_|___/\__\___|_| |_|        
                                                                                                                                    
                        
                - T0: 15: socketserver.TCPServer.server_activate <= None
                         _____ ___            _ ____            _____ ____ ____  ____                                                                   _   _            _               
                        |_   _/ _ \          / | ___|          |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____ _ __  __ _  ___| |_(_)_   ____ _| |_ ___         
                 _____    | || | | |  _____  | |___ \   _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \ '__|/ _` |/ __| __| \ \ / / _` | __/ _ \  _____ 
                |_____|   | || |_| | |_____| | |___) | |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/ |  | (_| | (__| |_| |\ V / (_| | ||  __/ |_____|
                          |_| \___/          |_|____/            |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|_|___\__,_|\___|\__|_| \_/ \__,_|\__\___|        
                                                                                                                                        |_____|                                          
                
        - T0: 2: socketserver.TCPServer.__init__ <= None
                 _____ ___            ____            _____ ____ ____  ____                                     _       _ _                      
                |_   _/ _ \          |___ \          |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __          (_)_ __ (_) |_                    
         _____    | || | | |  _____    __) |  _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__|         | | '_ \| | __|             _____ 
        |_____|   | || |_| | |_____|  / __/  |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _          | | | | | | |_             |_____|
                  |_| \___/          |_____|           |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                    |_____|_____|           |_____|_____|        
        
                 _____ ___            _ _____           _____ ____ ____  ____                                                        __                                       
           _    |_   _/ _ \     _    / |___  |    _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ ___  ___ _ ____   _____     / _| ___  _ __ _____   _____ _ __     _   
         _| |_    | || | | |  _| |_  | |  / /   _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ __|/ _ \ '__\ \ / / _ \   | |_ / _ \| '__/ _ \ \ / / _ \ '__|  _| |_ 
        |_   _|   | || |_| | |_   _| | | / /   |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _\__ \  __/ |   \ V /  __/   |  _| (_) | | |  __/\ V /  __/ |    |_   _|
          |_|     |_| \___/    |_|   |_|/_/      |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___/\___|_|    \_/ \___|___|_|  \___/|_|  \___| \_/ \___|_|      |_|  
                                                                                                                              |_____|                                         
        
        + T0: 17: socketserver.TCPServer.serve_forever -> socketserver.BaseServer.serve_forever => ( poll_interval=0.5 )
                         _____ ___            _  ___            ____       _           _   ____       _           _                       _       _ _                      
                   _    |_   _/ _ \     _    / |( _ )     _    / ___|  ___| | ___  ___| |_/ ___|  ___| | ___  ___| |_ ___  _ __          (_)_ __ (_) |_                _   
                 _| |_    | || | | |  _| |_  | |/ _ \   _| |_  \___ \ / _ \ |/ _ \/ __| __\___ \ / _ \ |/ _ \/ __| __/ _ \| '__|         | | '_ \| | __|             _| |_ 
                |_   _|   | || |_| | |_   _| | | (_) | |_   _|  ___) |  __/ |  __/ (__| |_ ___) |  __/ |  __/ (__| || (_) | | _          | | | | | | |_             |_   _|
                  |_|     |_| \___/    |_|   |_|\___/    |_|   |____/ \___|_|\___|\___|\__|____/ \___|_|\___|\___|\__\___/|_|(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                                              |_____|_____|           |_____|_____|        
                
                + T0: 18: selectors.SelectSelector.__init__ => 
                        + T0: 19: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ => ( name='_fd_to_key', value={} )
                        - T0: 19: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 20: selectors._SelectorMapping.__setattr__ -> builtins.object.__setattr__ => ( name='_selector', value=<selectors.SelectSelector object at 0x0000021D61022BE0> )
                        - T0: 20: selectors._SelectorMapping.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 21: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ => ( name='_map', value=<selectors._SelectorMapping object at 0x0000021D61042198> )
                        - T0: 21: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 22: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ => ( name='_readers', value=set() )
                        - T0: 22: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ <= None
                        + T0: 23: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ => ( name='_writers', value=set() )
                        - T0: 23: selectors.SelectSelector.__setattr__ -> builtins.object.__setattr__ <= None
                - T0: 18: selectors.SelectSelector.__init__ <= None
                         _____ ___            _  ___            ____       _           _   ____       _           _                       _       _ _                      
                        |_   _/ _ \          / |( _ )          / ___|  ___| | ___  ___| |_/ ___|  ___| | ___  ___| |_ ___  _ __          (_)_ __ (_) |_                    
                 _____    | || | | |  _____  | |/ _ \   _____  \___ \ / _ \ |/ _ \/ __| __\___ \ / _ \ |/ _ \/ __| __/ _ \| '__|         | | '_ \| | __|             _____ 
                |_____|   | || |_| | |_____| | | (_) | |_____|  ___) |  __/ |  __/ (__| |_ ___) |  __/ |  __/ (__| || (_) | | _          | | | | | | |_             |_____|
                          |_| \___/          |_|\___/          |____/ \___|_|\___|\___|\__|____/ \___|_|\___|\___|\__\___/|_|(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                                              |_____|_____|           |_____|_____|        
                
                         _____ ___            ____  _  _             ____       _           _   ____       _           _                            _     _                    
                   _    |_   _/ _ \     _    |___ \| || |      _    / ___|  ___| | ___  ___| |_/ ___|  ___| | ___  ___| |_ ___  _ __ _ __ ___  __ _(_)___| |_ ___ _ __     _   
                 _| |_    | || | | |  _| |_    __) | || |_   _| |_  \___ \ / _ \ |/ _ \/ __| __\___ \ / _ \ |/ _ \/ __| __/ _ \| '__| '__/ _ \/ _` | / __| __/ _ \ '__|  _| |_ 
                |_   _|   | || |_| | |_   _|  / __/|__   _| |_   _|  ___) |  __/ |  __/ (__| |_ ___) |  __/ |  __/ (__| || (_) | | _| | |  __/ (_| | \__ \ ||  __/ |    |_   _|
                  |_|     |_| \___/    |_|   |_____|  |_|     |_|   |____/ \___|_|\___|\___|\__|____/ \___|_|\___|\___|\__\___/|_|(_)_|  \___|\__, |_|___/\__\___|_|      |_|  
                                                                                                                                              |___/                            
                
                + T0: 24: selectors.SelectSelector.register => ( fileobj=<socketserver.TCPServer object at 0x0000021D60FD5C50>, events=1, data=None )
                        + T0: 25: selectors.SelectSelector.register -> selectors._BaseSelectorImpl.register => ( fileobj=<socketserver.TCPServer object at 0x0000021D60FD5C50>, events=1, data=None )
                                + T0: 26: selectors.SelectSelector._fileobj_lookup -> selectors._BaseSelectorImpl._fileobj_lookup => ( fileobj=<socketserver.TCPServer object at 0x0000021D60FD5C50> )
                                        + T0: 27: selectors._fileobj_to_fd => ( fileobj=<socketserver.TCPServer object at 0x0000021D60FD5C50> )
                                                + T0: 28: socketserver.TCPServer.fileno => 
                                                - T0: 28: socketserver.TCPServer.fileno <= 820
                                        - T0: 27: selectors._fileobj_to_fd <= 820
                                - T0: 26: selectors.SelectSelector._fileobj_lookup -> selectors._BaseSelectorImpl._fileobj_lookup <= 820
                        - T0: 25: selectors.SelectSelector.register -> selectors._BaseSelectorImpl.register <= SelectorKey(fileobj=<socketserver.TCPServer object at 0x0000021D60FD5C50>, fd=820, events=1, data=None)
                - T0: 24: selectors.SelectSelector.register <= SelectorKey(fileobj=<socketserver.TCPServer object at 0x0000021D60FD5C50>, fd=820, events=1, data=None)
                         _____ ___            ____  _  _             ____       _           _   ____       _           _                            _     _                    
                        |_   _/ _ \          |___ \| || |           / ___|  ___| | ___  ___| |_/ ___|  ___| | ___  ___| |_ ___  _ __ _ __ ___  __ _(_)___| |_ ___ _ __         
                 _____    | || | | |  _____    __) | || |_   _____  \___ \ / _ \ |/ _ \/ __| __\___ \ / _ \ |/ _ \/ __| __/ _ \| '__| '__/ _ \/ _` | / __| __/ _ \ '__|  _____ 
                |_____|   | || |_| | |_____|  / __/|__   _| |_____|  ___) |  __/ |  __/ (__| |_ ___) |  __/ |  __/ (__| || (_) | | _| | |  __/ (_| | \__ \ ||  __/ |    |_____|
                          |_| \___/          |_____|  |_|           |____/ \___|_|\___|\___|\__|____/ \___|_|\___|\___|\__\___/|_|(_)_|  \___|\__, |_|___/\__\___|_|           
                                                                                                                                              |___/                            
                
                         _____ ___            _____  __           
                   _    |_   _/ _ \     _    |___ / / /_      _   
                 _| |_    | || | | |  _| |_    |_ \| '_ \   _| |_ 
                |_   _|   | || |_| | |_   _|  ___) | (_) | |_   _|
                  |_|     |_| \___/    |_|   |____/ \___/    |_|  
                                                                  
                 _____ ____ ____  ____                               _                     _ _                                         _                   _     _            _            
                |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __    | |__   __ _ _ __   __| | | ___     _ __ ___  __ _ _   _  ___  ___| |_     _ __   ___ | |__ | | ___   ___| | __    _   
                  | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__|   | '_ \ / _` | '_ \ / _` | |/ _ \   | '__/ _ \/ _` | | | |/ _ \/ __| __|   | '_ \ / _ \| '_ \| |/ _ \ / __| |/ /  _| |_ 
                  | || |___|  __/ ___) |  __/ |   \ V /  __/ | _    | | | | (_| | | | | (_| | |  __/   | | |  __/ (_| | |_| |  __/\__ \ |_    | | | | (_) | |_) | | (_) | (__|   <  |_   _|
                  |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___|_| |_|\__,_|_| |_|\__,_|_|\___|___|_|  \___|\__, |\__,_|\___||___/\__|___|_| |_|\___/|_.__/|_|\___/ \___|_|\_\   |_|  
                                                               |_____|                            |_____|           |_|                  |_____|                                           
                
                + T0: 36: socketserver.TCPServer._handle_request_noblock -> socketserver.BaseServer._handle_request_noblock => 
                                 _____ ___            __________           _____ ____ ____  ____                                     _                                      _           
                           _    |_   _/ _ \     _    |___ /___  |    _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ __ _  ___| |_     _ __ ___  __ _ _   _  ___  ___| |_     _   
                         _| |_    | || | | |  _| |_    |_ \  / /   _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ _` |/ _ \ __|   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                        |_   _|   | || |_| | |_   _|  ___) |/ /   |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | | (_| |  __/ |_    | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                          |_|     |_| \___/    |_|   |____//_/      |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)__, |\___|\__|___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                                                          |___/        |_____|           |_|                            
                        
                        + T0: 37: socketserver.TCPServer.get_request => 
                                         _____ ___            _____  ___                           _        _                             _           
                                   _    |_   _/ _ \     _    |___ / ( _ )     _     ___  ___   ___| | _____| |_   __ _  ___ ___ ___ _ __ | |_     _   
                                 _| |_    | || | | |  _| |_    |_ \ / _ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| / _` |/ __/ __/ _ \ '_ \| __|  _| |_ 
                                |_   _|   | || |_| | |_   _|  ___) | (_) | |_   _| \__ \ (_) | (__|   <  __/ |_ | (_| | (_| (_|  __/ |_) | |_  |_   _|
                                  |_|     |_| \___/    |_|   |____/ \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)__,_|\___\___\___| .__/ \__|   |_|  
                                                                                                                                   |_|                
                                
                                + T0: 38: socket.socket.accept => 
                                        + T0: 39: socket.socket._accept -> _socket.socket._accept => ( <socket.socket fd=820, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000)> )
                                        - T0: 39: socket.socket._accept -> _socket.socket._accept <= (776, ('127.0.0.1', 1135))
                                                 _____ ___            _  _    ___                           _        _               _       _ _                      
                                           _    |_   _/ _ \     _    | || |  / _ \     _     ___  ___   ___| | _____| |_            (_)_ __ (_) |_                _   
                                         _| |_    | || | | |  _| |_  | || |_| | | |  _| |_  / __|/ _ \ / __| |/ / _ \ __|           | | '_ \| | __|             _| |_ 
                                        |_   _|   | || |_| | |_   _| |__   _| |_| | |_   _| \__ \ (_) | (__|   <  __/ |_ _          | | | | | | |_             |_   _|
                                          |_|     |_| \___/    |_|      |_|  \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                                         |_____|_____|           |_____|_____|        
                                        
                                        + T0: 40: socket.socket.__init__ => ( family=<AddressFamily.AF_INET: 2>, type=1, proto=0, fileno=776 )
                                                + T0: 41: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=0 )
                                                - T0: 41: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                + T0: 42: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_closed', value=False )
                                                - T0: 42: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                        - T0: 40: socket.socket.__init__ <= None
                                                 _____ ___            _  _    ___                           _        _               _       _ _                      
                                                |_   _/ _ \          | || |  / _ \           ___  ___   ___| | _____| |_            (_)_ __ (_) |_                    
                                         _____    | || | | |  _____  | || |_| | | |  _____  / __|/ _ \ / __| |/ / _ \ __|           | | '_ \| | __|             _____ 
                                        |_____|   | || |_| | |_____| |__   _| |_| | |_____| \__ \ (_) | (__|   <  __/ |_ _          | | | | | | |_             |_____|
                                                  |_| \___/             |_|  \___/          |___/\___/ \___|_|\_\___|\__(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                                         |_____|_____|           |_____|_____|        
                                        
                                        + T0: 43: socket.socket.gettimeout -> _socket.socket.gettimeout => ( <socket.socket fd=820, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000)> )
                                        - T0: 43: socket.socket.gettimeout -> _socket.socket.gettimeout <= None
                                - T0: 38: socket.socket.accept <= (<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, ('127.0.0.1', 1135))
                                         _____ ___            _____  ___                           _        _                             _           
                                        |_   _/ _ \          |___ / ( _ )           ___  ___   ___| | _____| |_   __ _  ___ ___ ___ _ __ | |_         
                                 _____    | || | | |  _____    |_ \ / _ \   _____  / __|/ _ \ / __| |/ / _ \ __| / _` |/ __/ __/ _ \ '_ \| __|  _____ 
                                |_____|   | || |_| | |_____|  ___) | (_) | |_____| \__ \ (_) | (__|   <  __/ |_ | (_| | (_| (_|  __/ |_) | |_  |_____|
                                          |_| \___/          |____/ \___/          |___/\___/ \___|_|\_\___|\__(_)__,_|\___\___\___| .__/ \__|        
                                                                                                                                   |_|                
                                
                        - T0: 37: socketserver.TCPServer.get_request <= (<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, ('127.0.0.1', 1135))
                                 _____ ___            __________           _____ ____ ____  ____                                     _                                      _           
                                |_   _/ _ \          |___ /___  |         |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ __ _  ___| |_     _ __ ___  __ _ _   _  ___  ___| |_         
                         _____    | || | | |  _____    |_ \  / /   _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ _` |/ _ \ __|   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                        |_____|   | || |_| | |_____|  ___) |/ /   |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | | (_| |  __/ |_    | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                                  |_| \___/          |____//_/              |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)__, |\___|\__|___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                                                          |___/        |_____|           |_|                            
                        
                                 _____ ___            _  _   _  _             _____ ____ ____  ____                                          _  __                                          _           
                           _    |_   _/ _ \     _    | || | | || |      _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ ____   _____ _ __(_)/ _|_   _     _ __ ___  __ _ _   _  ___  ___| |_     _   
                         _| |_    | || | | |  _| |_  | || |_| || |_   _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__\ \ / / _ \ '__| | |_| | | |   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                        |_   _|   | || |_| | |_   _| |__   _|__   _| |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _ \ V /  __/ |  | |  _| |_| |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                          |_|     |_| \___/    |_|      |_|    |_|     |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_) \_/ \___|_|  |_|_|  \__, |___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                                                                                   |___/_____|           |_|                            
                        
                        + T0: 44: socketserver.TCPServer.verify_request -> socketserver.BaseServer.verify_request => ( request=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, client_address=('127.0.0.1', 1135) )
                        - T0: 44: socketserver.TCPServer.verify_request -> socketserver.BaseServer.verify_request <= True
                                 _____ ___            _  _   _  _             _____ ____ ____  ____                                          _  __                                          _           
                                |_   _/ _ \          | || | | || |           |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ ____   _____ _ __(_)/ _|_   _     _ __ ___  __ _ _   _  ___  ___| |_         
                         _____    | || | | |  _____  | || |_| || |_   _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__\ \ / / _ \ '__| | |_| | | |   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                        |_____|   | || |_| | |_____| |__   _|__   _| |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _ \ V /  __/ |  | |  _| |_| |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                                  |_| \___/             |_|    |_|             |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_) \_/ \___|_|  |_|_|  \__, |___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                                                                                   |___/_____|           |_|                            
                        
                                 _____ ___            _  _  ____            _____ ____ ____  ____                                                                                                _           
                           _    |_   _/ _ \     _    | || || ___|     _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ _ __  _ __ ___   ___ ___  ___ ___     _ __ ___  __ _ _   _  ___  ___| |_     _   
                         _| |_    | || | | |  _| |_  | || ||___ \   _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__| '_ \| '__/ _ \ / __/ _ \/ __/ __|   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                        |_   _|   | || |_| | |_   _| |__   _|__) | |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _| |_) | | | (_) | (_|  __/\__ \__ \   | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                          |_|     |_| \___/    |_|      |_||____/    |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_) .__/|_|  \___/ \___\___||___/___/___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                                                           |_|                              |_____|           |_|                            
                        
                        + T0: 45: socketserver.TCPServer.process_request -> socketserver.BaseServer.process_request => ( request=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, client_address=('127.0.0.1', 1135) )
                                         _____ ___            _  _    __             _____ ____ ____  ____                            __ _       _     _                                        _           
                                   _    |_   _/ _ \     _    | || |  / /_      _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ / _(_)_ __ (_)___| |__      _ __ ___  __ _ _   _  ___  ___| |_     _   
                                 _| |_    | || | | |  _| |_  | || |_| '_ \   _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__| |_| | '_ \| / __| '_ \    | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                                |_   _|   | || |_| | |_   _| |__   _| (_) | |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _|  _| | | | | \__ \ | | |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                                  |_|     |_| \___/    |_|      |_|  \___/    |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)_| |_|_| |_|_|___/_| |_|___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                                                                                           |_____|           |_|                            
                                
                                + T0: 46: socketserver.TCPServer.finish_request -> socketserver.BaseServer.finish_request => ( request=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, client_address=('127.0.0.1', 1135) )
                                                 _____ ___            _  _ _____           ____                 ____                            _   _   _                 _ _                     _       _ _                      
                                           _    |_   _/ _ \     _    | || |___  |    _    | __ )  __ _ ___  ___|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __          (_)_ __ (_) |_                _   
                                         _| |_    | || | | |  _| |_  | || |_ / /   _| |_  |  _ \ / _` / __|/ _ \ |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__|         | | '_ \| | __|             _| |_ 
                                        |_   _|   | || |_| | |_   _| |__   _/ /   |_   _| | |_) | (_| \__ \  __/  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _          | | | | | | |_             |_   _|
                                          |_|     |_| \___/    |_|      |_|/_/      |_|   |____/ \__,_|___/\___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                                             |_|                                                      |_____|_____|           |_____|_____|        
                                        
                                        + T0: 47: __main__.CustomHandler.__init__ -> socketserver.BaseRequestHandler.__init__ => ( request=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, client_address=('127.0.0.1', 1135), server=<socketserver.TCPServer object at 0x0000021D60FD5C50> )
                                                + T0: 48: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ => ( name='request', value=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)> )
                                                - T0: 48: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                + T0: 49: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ => ( name='client_address', value=('127.0.0.1', 1135) )
                                                - T0: 49: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                + T0: 50: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ => ( name='server', value=<socketserver.TCPServer object at 0x0000021D60FD5C50> )
                                                - T0: 50: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                         _____ ___            ____  _            ____          _                  _   _                 _ _                    _                       
                                                   _    |_   _/ _ \     _    | ___|/ |    _     / ___|   _ ___| |_ ___  _ __ ___ | | | | __ _ _ __   __| | | ___ _ __ ___  ___| |_ _   _ _ __      _   
                                                 _| |_    | || | | |  _| |_  |___ \| |  _| |_  | |  | | | / __| __/ _ \| '_ ` _ \| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ __| | | | '_ \   _| |_ 
                                                |_   _|   | || |_| | |_   _|  ___) | | |_   _| | |__| |_| \__ \ || (_) | | | | | |  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ |_| |_| | |_) | |_   _|
                                                  |_|     |_| \___/    |_|   |____/|_|   |_|    \____\__,_|___/\__\___/|_| |_| |_|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|\__|\__,_| .__/    |_|  
                                                                                                                                                                                        |_|            
                                                
                                                + T0: 51: __main__.CustomHandler.setup -> socketserver.StreamRequestHandler.setup => 
                                                        + T0: 52: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ => ( name='connection', value=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)> )
                                                        - T0: 52: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                 _____ ___            ____ _____                          _        _                     _         __ _ _              
                                                           _    |_   _/ _ \     _    | ___|___ /     _     ___  ___   ___| | _____| |_   _ __ ___   __ _| | _____ / _(_) | ___     _   
                                                         _| |_    | || | | |  _| |_  |___ \ |_ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| | '_ ` _ \ / _` | |/ / _ \ |_| | |/ _ \  _| |_ 
                                                        |_   _|   | || |_| | |_   _|  ___) |__) | |_   _| \__ \ (_) | (__|   <  __/ |_ _| | | | | | (_| |   <  __/  _| | |  __/ |_   _|
                                                          |_|     |_| \___/    |_|   |____/____/    |_|   |___/\___/ \___|_|\_\___|\__(_)_| |_| |_|\__,_|_|\_\___|_| |_|_|\___|   |_|  
                                                                                                                                                                                       
                                                        
                                                        + T0: 53: socket.socket.makefile => ( mode='rb', buffering=-1, encoding=None, errors=None, newline=None )
                                                                         _____ ___            ____  _  _             ____             _        _   ___ ___             _       _ _                      
                                                                   _    |_   _/ _ \     _    | ___|| || |      _    / ___|  ___   ___| | _____| |_|_ _/ _ \           (_)_ __ (_) |_                _   
                                                                 _| |_    | || | | |  _| |_  |___ \| || |_   _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | |          | | '_ \| | __|             _| |_ 
                                                                |_   _|   | || |_| | |_   _|  ___) |__   _| |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| |          | | | | | | |_             |_   _|
                                                                  |_|     |_| \___/    |_|   |____/   |_|     |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                                                                           |_____|_____|           |_____|_____|        
                                                                
                                                                + T0: 54: socket.SocketIO.__init__ => ( sock=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, mode='r' )
                                                                        + T0: 55: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_sock', value=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)> )
                                                                        - T0: 55: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 56: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_mode', value='rb' )
                                                                        - T0: 56: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 57: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_reading', value=True )
                                                                        - T0: 57: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 58: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_writing', value=False )
                                                                        - T0: 58: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 59: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_timeout_occurred', value=False )
                                                                        - T0: 59: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                - T0: 54: socket.SocketIO.__init__ <= None
                                                                         _____ ___            ____  _  _             ____             _        _   ___ ___             _       _ _                      
                                                                        |_   _/ _ \          | ___|| || |           / ___|  ___   ___| | _____| |_|_ _/ _ \           (_)_ __ (_) |_                    
                                                                 _____    | || | | |  _____  |___ \| || |_   _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | |          | | '_ \| | __|             _____ 
                                                                |_____|   | || |_| | |_____|  ___) |__   _| |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| |          | | | | | | |_             |_____|
                                                                          |_| \___/          |____/   |_|           |____/ \___/ \___|_|\_\___|\__|___\___(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                                                                           |_____|_____|           |_____|_____|        
                                                                
                                                                + T0: 60: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=1 )
                                                                - T0: 60: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 61: socket.SocketIO.readable => 
                                                                - T0: 61: socket.SocketIO.readable <= True
                                                                + T0: 62: socket.SocketIO.tell -> _io._IOBase.tell => 
                                                                        + T0: 63: socket.SocketIO.seek -> _io._IOBase.seek => ( <socket.SocketIO object at 0x0000021D610C2D30>, 0, 1 )
                                                                        - T0: 63: socket.SocketIO.seek -> _io._IOBase.seek <= # Error
---
Traceback (most recent call last):
  File "D:\Demo\AoikTraceCall\src\aoiktracecall\wrap.py", line 290, in new_func
    res = func(*args, **kwargs)
io.UnsupportedOperation: seek
---

                                                                - T0: 62: socket.SocketIO.tell -> _io._IOBase.tell <= # Error
---
Traceback (most recent call last):
  File "D:\Demo\AoikTraceCall\src\aoiktracecall\wrap.py", line 290, in new_func
    res = func(*args, **kwargs)
  File "D:\Demo\AoikTraceCall\src\aoiktracecall\wrap.py", line 42, in __call__
    res = new_call(*args, **kwargs)
  File "D:\Demo\AoikTraceCall\src\aoiktracecall\wrap.py", line 290, in new_func
    res = func(*args, **kwargs)
io.UnsupportedOperation: seek
---

                                                                + T0: 64: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x0000021D610C2D30> )
                                                                - T0: 64: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                        - T0: 53: socket.socket.makefile <= <_io.BufferedReader name=776>
                                                                 _____ ___            ____ _____                          _        _                     _         __ _ _              
                                                                |_   _/ _ \          | ___|___ /           ___  ___   ___| | _____| |_   _ __ ___   __ _| | _____ / _(_) | ___         
                                                         _____    | || | | |  _____  |___ \ |_ \   _____  / __|/ _ \ / __| |/ / _ \ __| | '_ ` _ \ / _` | |/ / _ \ |_| | |/ _ \  _____ 
                                                        |_____|   | || |_| | |_____|  ___) |__) | |_____| \__ \ (_) | (__|   <  __/ |_ _| | | | | | (_| |   <  __/  _| | |  __/ |_____|
                                                                  |_| \___/          |____/____/          |___/\___/ \___|_|\_\___|\__(_)_| |_| |_|\__,_|_|\_\___|_| |_|_|\___|        
                                                                                                                                                                                       
                                                        
                                                                + T0: 66: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x0000021D610C2D30> )
                                                                - T0: 66: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                        + T0: 65: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ => ( name='rfile', value=<_io.BufferedReader name=776> )
                                                                + T0: 67: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x0000021D610C2D30> )
                                                                - T0: 67: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                        - T0: 65: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                                 _____ ___             __    ___                           _        _                     _         __ _ _              
                                                           _    |_   _/ _ \     _     / /_  ( _ )     _     ___  ___   ___| | _____| |_   _ __ ___   __ _| | _____ / _(_) | ___     _   
                                                         _| |_    | || | | |  _| |_  | '_ \ / _ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| | '_ ` _ \ / _` | |/ / _ \ |_| | |/ _ \  _| |_ 
                                                        |_   _|   | || |_| | |_   _| | (_) | (_) | |_   _| \__ \ (_) | (__|   <  __/ |_ _| | | | | | (_| |   <  __/  _| | |  __/ |_   _|
                                                          |_|     |_| \___/    |_|    \___/ \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)_| |_| |_|\__,_|_|\_\___|_| |_|_|\___|   |_|  
                                                                                                                                                                                        
                                                        
                                                        + T0: 68: socket.socket.makefile => ( mode='wb', buffering=0, encoding=None, errors=None, newline=None )
                                                                         _____ ___             __   ___            ____             _        _   ___ ___             _       _ _                      
                                                                   _    |_   _/ _ \     _     / /_ / _ \     _    / ___|  ___   ___| | _____| |_|_ _/ _ \           (_)_ __ (_) |_                _   
                                                                 _| |_    | || | | |  _| |_  | '_ \ (_) |  _| |_  \___ \ / _ \ / __| |/ / _ \ __|| | | | |          | | '_ \| | __|             _| |_ 
                                                                |_   _|   | || |_| | |_   _| | (_) \__, | |_   _|  ___) | (_) | (__|   <  __/ |_ | | |_| |          | | | | | | |_             |_   _|
                                                                  |_|     |_| \___/    |_|    \___/  /_/    |_|   |____/ \___/ \___|_|\_\___|\__|___\___(_)____ ____|_|_| |_|_|\__|____ _____    |_|  
                                                                                                                                                         |_____|_____|           |_____|_____|        
                                                                
                                                                + T0: 69: socket.SocketIO.__init__ => ( sock=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, mode='w' )
                                                                        + T0: 70: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_sock', value=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)> )
                                                                        - T0: 70: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 71: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_mode', value='wb' )
                                                                        - T0: 71: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 72: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_reading', value=False )
                                                                        - T0: 72: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 73: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_writing', value=True )
                                                                        - T0: 73: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                        + T0: 74: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_timeout_occurred', value=False )
                                                                        - T0: 74: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                - T0: 69: socket.SocketIO.__init__ <= None
                                                                         _____ ___             __   ___            ____             _        _   ___ ___             _       _ _                      
                                                                        |_   _/ _ \           / /_ / _ \          / ___|  ___   ___| | _____| |_|_ _/ _ \           (_)_ __ (_) |_                    
                                                                 _____    | || | | |  _____  | '_ \ (_) |  _____  \___ \ / _ \ / __| |/ / _ \ __|| | | | |          | | '_ \| | __|             _____ 
                                                                |_____|   | || |_| | |_____| | (_) \__, | |_____|  ___) | (_) | (__|   <  __/ |_ | | |_| |          | | | | | | |_             |_____|
                                                                          |_| \___/           \___/  /_/          |____/ \___/ \___|_|\_\___|\__|___\___(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                                                                         |_____|_____|           |_____|_____|        
                                                                
                                                                + T0: 75: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=2 )
                                                                - T0: 75: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                        - T0: 68: socket.socket.makefile <= <socket.SocketIO object at 0x0000021D610B0470>
                                                                 _____ ___             __    ___                           _        _                     _         __ _ _              
                                                                |_   _/ _ \           / /_  ( _ )           ___  ___   ___| | _____| |_   _ __ ___   __ _| | _____ / _(_) | ___         
                                                         _____    | || | | |  _____  | '_ \ / _ \   _____  / __|/ _ \ / __| |/ / _ \ __| | '_ ` _ \ / _` | |/ / _ \ |_| | |/ _ \  _____ 
                                                        |_____|   | || |_| | |_____| | (_) | (_) | |_____| \__ \ (_) | (__|   <  __/ |_ _| | | | | | (_| |   <  __/  _| | |  __/ |_____|
                                                                  |_| \___/           \___/ \___/          |___/\___/ \___|_|\_\___|\__(_)_| |_| |_|\__,_|_|\_\___|_| |_|_|\___|        
                                                                                                                                                                                        
                                                        
                                                        + T0: 76: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ => ( name='wfile', value=<socket.SocketIO object at 0x0000021D610B0470> )
                                                        - T0: 76: __main__.CustomHandler.__setattr__ -> builtins.object.__setattr__ <= None
                                                - T0: 51: __main__.CustomHandler.setup -> socketserver.StreamRequestHandler.setup <= None
                                                         _____ ___            ____  _            ____          _                  _   _                 _ _                    _                       
                                                        |_   _/ _ \          | ___|/ |          / ___|   _ ___| |_ ___  _ __ ___ | | | | __ _ _ __   __| | | ___ _ __ ___  ___| |_ _   _ _ __          
                                                 _____    | || | | |  _____  |___ \| |  _____  | |  | | | / __| __/ _ \| '_ ` _ \| |_| |/ _` | '_ \ / _` | |/ _ \ '__/ __|/ _ \ __| | | | '_ \   _____ 
                                                |_____|   | || |_| | |_____|  ___) | | |_____| | |__| |_| \__ \ || (_) | | | | | |  _  | (_| | | | | (_| | |  __/ | _\__ \  __/ |_| |_| | |_) | |_____|
                                                          |_| \___/          |____/|_|          \____\__,_|___/\__\___/|_| |_| |_|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)___/\___|\__|\__,_| .__/         
                                                                                                                                                                                        |_|            
                                                
                                                         _____ ___            _____ _____            ____          _                  _   _                 _ _           _                     _ _              
                                                   _    |_   _/ _ \     _    |___  |___  |    _     / ___|   _ ___| |_ ___  _ __ ___ | | | | __ _ _ __   __| | | ___ _ __| |__   __ _ _ __   __| | | ___     _   
                                                 _| |_    | || | | |  _| |_     / /   / /   _| |_  | |  | | | / __| __/ _ \| '_ ` _ \| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _` | '_ \ / _` | |/ _ \  _| |_ 
                                                |_   _|   | || |_| | |_   _|   / /   / /   |_   _| | |__| |_| \__ \ || (_) | | | | | |  _  | (_| | | | | (_| | |  __/ | _| | | | (_| | | | | (_| | |  __/ |_   _|
                                                  |_|     |_| \___/    |_|    /_/   /_/      |_|    \____\__,_|___/\__\___/|_| |_| |_|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\__,_|_| |_|\__,_|_|\___|   |_|  
                                                                                                                                                                                                                 
                                                
                                                + T0: 77: __main__.CustomHandler.handle => 
                                                        + T0: 78: socket.SocketIO.readinto => ( b=<memory at 0x0000021D60F64C48> )
                                                                + T0: 79: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x0000021D610C2D30> )
                                                                - T0: 79: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                + T0: 80: socket.SocketIO._checkReadable -> _io._IOBase._checkReadable => ( <socket.SocketIO object at 0x0000021D610C2D30> )
                                                                        + T0: 81: socket.SocketIO.readable => 
                                                                        - T0: 81: socket.SocketIO.readable <= True
                                                                - T0: 80: socket.SocketIO._checkReadable -> _io._IOBase._checkReadable <= True
                                                                + T0: 82: socket.socket.recv_into -> _socket.socket.recv_into => ( <socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, <memory at 0x0000021D60F64C48> )
                                                                - T0: 82: socket.socket.recv_into -> _socket.socket.recv_into <= 8
                                                        - T0: 78: socket.SocketIO.readinto <= 8
                                                        + T0: 83: socket.SocketIO.write => ( b=b'hello \r\n' )
                                                                + T0: 84: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed => ( <socket.SocketIO object at 0x0000021D610B0470> )
                                                                - T0: 84: socket.SocketIO._checkClosed -> _io._IOBase._checkClosed <= None
                                                                + T0: 85: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable => ( <socket.SocketIO object at 0x0000021D610B0470> )
                                                                        + T0: 86: socket.SocketIO.writable => 
                                                                        - T0: 86: socket.SocketIO.writable <= True
                                                                - T0: 85: socket.SocketIO._checkWritable -> _io._IOBase._checkWritable <= True
                                                                + T0: 87: socket.socket.send -> _socket.socket.send => ( <socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, b'hello \r\n' )
                                                                - T0: 87: socket.socket.send -> _socket.socket.send <= 8
                                                        - T0: 83: socket.SocketIO.write <= 8
                                                - T0: 77: __main__.CustomHandler.handle <= None
                                                         _____ ___            _____ _____            ____          _                  _   _                 _ _           _                     _ _              
                                                        |_   _/ _ \          |___  |___  |          / ___|   _ ___| |_ ___  _ __ ___ | | | | __ _ _ __   __| | | ___ _ __| |__   __ _ _ __   __| | | ___         
                                                 _____    | || | | |  _____     / /   / /   _____  | |  | | | / __| __/ _ \| '_ ` _ \| |_| |/ _` | '_ \ / _` | |/ _ \ '__| '_ \ / _` | '_ \ / _` | |/ _ \  _____ 
                                                |_____|   | || |_| | |_____|   / /   / /   |_____| | |__| |_| \__ \ || (_) | | | | | |  _  | (_| | | | | (_| | |  __/ | _| | | | (_| | | | | (_| | |  __/ |_____|
                                                          |_| \___/           /_/   /_/             \____\__,_|___/\__\___/|_| |_| |_|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|\__,_|_| |_|\__,_|_|\___|        
                                                                                                                                                                                                                 
                                                
                                                         _____ ___             ___   ___             ____          _                  _   _                 _ _            __ _       _     _             
                                                   _    |_   _/ _ \     _     ( _ ) ( _ )     _     / ___|   _ ___| |_ ___  _ __ ___ | | | | __ _ _ __   __| | | ___ _ __ / _(_)_ __ (_)___| |__      _   
                                                 _| |_    | || | | |  _| |_   / _ \ / _ \   _| |_  | |  | | | / __| __/ _ \| '_ ` _ \| |_| |/ _` | '_ \ / _` | |/ _ \ '__| |_| | '_ \| / __| '_ \   _| |_ 
                                                |_   _|   | || |_| | |_   _| | (_) | (_) | |_   _| | |__| |_| \__ \ || (_) | | | | | |  _  | (_| | | | | (_| | |  __/ | _|  _| | | | | \__ \ | | | |_   _|
                                                  |_|     |_| \___/    |_|    \___/ \___/    |_|    \____\__,_|___/\__\___/|_| |_| |_|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|_| |_|_|___/_| |_|   |_|  
                                                                                                                                                                                                          
                                                
                                                + T0: 88: __main__.CustomHandler.finish -> socketserver.StreamRequestHandler.finish => 
                                                        + T0: 89: socket.SocketIO.flush -> _io._IOBase.flush => 
                                                        - T0: 89: socket.SocketIO.flush -> _io._IOBase.flush <= None
                                                        + T0: 90: socket.SocketIO.close => 
                                                                + T0: 91: socket.SocketIO.flush -> _io._IOBase.flush => 
                                                                - T0: 91: socket.SocketIO.flush -> _io._IOBase.flush <= None
                                                                + T0: 92: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='__IOBase_closed', value=True )
                                                                - T0: 92: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 93: socket.socket._decref_socketios => 
                                                                        + T0: 94: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=1 )
                                                                        - T0: 94: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                                - T0: 93: socket.socket._decref_socketios <= None
                                                                + T0: 95: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_sock', value=None )
                                                                - T0: 95: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                        - T0: 90: socket.SocketIO.close <= None
                                                        + T0: 96: socket.SocketIO.flush -> _io._IOBase.flush => 
                                                        - T0: 96: socket.SocketIO.flush -> _io._IOBase.flush <= None
                                                        + T0: 97: socket.SocketIO.close => 
                                                                + T0: 98: socket.SocketIO.flush -> _io._IOBase.flush => 
                                                                - T0: 98: socket.SocketIO.flush -> _io._IOBase.flush <= None
                                                                + T0: 99: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='__IOBase_closed', value=True )
                                                                - T0: 99: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                                + T0: 100: socket.socket._decref_socketios => 
                                                                        + T0: 101: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_io_refs', value=0 )
                                                                        - T0: 101: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                                - T0: 100: socket.socket._decref_socketios <= None
                                                                + T0: 102: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ => ( name='_sock', value=None )
                                                                - T0: 102: socket.SocketIO.__setattr__ -> builtins.object.__setattr__ <= None
                                                        - T0: 97: socket.SocketIO.close <= None
                                                - T0: 88: __main__.CustomHandler.finish -> socketserver.StreamRequestHandler.finish <= None
                                                         _____ ___             ___   ___             ____          _                  _   _                 _ _            __ _       _     _             
                                                        |_   _/ _ \           ( _ ) ( _ )           / ___|   _ ___| |_ ___  _ __ ___ | | | | __ _ _ __   __| | | ___ _ __ / _(_)_ __ (_)___| |__          
                                                 _____    | || | | |  _____   / _ \ / _ \   _____  | |  | | | / __| __/ _ \| '_ ` _ \| |_| |/ _` | '_ \ / _` | |/ _ \ '__| |_| | '_ \| / __| '_ \   _____ 
                                                |_____|   | || |_| | |_____| | (_) | (_) | |_____| | |__| |_| \__ \ || (_) | | | | | |  _  | (_| | | | | (_| | |  __/ | _|  _| | | | | \__ \ | | | |_____|
                                                          |_| \___/           \___/ \___/           \____\__,_|___/\__\___/|_| |_| |_|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)_| |_|_| |_|_|___/_| |_|        
                                                                                                                                                                                                          
                                                
                                        - T0: 47: __main__.CustomHandler.__init__ -> socketserver.BaseRequestHandler.__init__ <= None
                                                 _____ ___            _  _ _____           ____                 ____                            _   _   _                 _ _                     _       _ _                      
                                                |_   _/ _ \          | || |___  |         | __ )  __ _ ___  ___|  _ \ ___  __ _ _   _  ___  ___| |_| | | | __ _ _ __   __| | | ___ _ __          (_)_ __ (_) |_                    
                                         _____    | || | | |  _____  | || |_ / /   _____  |  _ \ / _` / __|/ _ \ |_) / _ \/ _` | | | |/ _ \/ __| __| |_| |/ _` | '_ \ / _` | |/ _ \ '__|         | | '_ \| | __|             _____ 
                                        |_____|   | || |_| | |_____| |__   _/ /   |_____| | |_) | (_| \__ \  __/  _ <  __/ (_| | |_| |  __/\__ \ |_|  _  | (_| | | | | (_| | |  __/ | _          | | | | | | |_             |_____|
                                                  |_| \___/             |_|/_/            |____/ \__,_|___/\___|_| \_\___|\__, |\__,_|\___||___/\__|_| |_|\__,_|_| |_|\__,_|_|\___|_|(_)____ ____|_|_| |_|_|\__|____ _____         
                                                                                                                             |_|                                                      |_____|_____|           |_____|_____|        
                                        
                                - T0: 46: socketserver.TCPServer.finish_request -> socketserver.BaseServer.finish_request <= None
                                         _____ ___            _  _    __             _____ ____ ____  ____                            __ _       _     _                                        _           
                                        |_   _/ _ \          | || |  / /_           |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ / _(_)_ __ (_)___| |__      _ __ ___  __ _ _   _  ___  ___| |_         
                                 _____    | || | | |  _____  | || |_| '_ \   _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__| |_| | '_ \| / __| '_ \    | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                                |_____|   | || |_| | |_____| |__   _| (_) | |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _|  _| | | | | \__ \ | | |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                                          |_| \___/             |_|  \___/            |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)_| |_|_| |_|_|___/_| |_|___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                                                                                           |_____|           |_|                            
                                
                                         _____ ___            _  ___ _____           _____ ____ ____  ____                               _           _      _                                                        _           
                                   _    |_   _/ _ \     _    / |/ _ \___ /     _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ ___| |__  _   _| |_ __| | _____      ___ __      _ __ ___  __ _ _   _  ___  ___| |_     _   
                                 _| |_    | || | | |  _| |_  | | | | ||_ \   _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ __| '_ \| | | | __/ _` |/ _ \ \ /\ / / '_ \    | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                                |_   _|   | || |_| | |_   _| | | |_| |__) | |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _\__ \ | | | |_| | || (_| | (_) \ V  V /| | | |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                                  |_|     |_| \___/    |_|   |_|\___/____/    |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___/_| |_|\__,_|\__\__,_|\___/ \_/\_/ |_| |_|___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                                                                                                                |_____|           |_|                            
                                
                                + T0: 103: socketserver.TCPServer.shutdown_request => ( request=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)> )
                                        + T0: 104: socket.socket.shutdown -> _socket.socket.shutdown => ( <socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)>, 1 )
                                        - T0: 104: socket.socket.shutdown -> _socket.socket.shutdown <= None
                                                 _____ ___            _  ___  ____            _____ ____ ____  ____                               _                                                   _           
                                           _    |_   _/ _ \     _    / |/ _ \| ___|     _    |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ ___| | ___  ___  ___     _ __ ___  __ _ _   _  ___  ___| |_     _   
                                         _| |_    | || | | |  _| |_  | | | | |___ \   _| |_    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ __| |/ _ \/ __|/ _ \   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _| |_ 
                                        |_   _|   | || |_| | |_   _| | | |_| |___) | |_   _|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | | (__| | (_) \__ \  __/   | | |  __/ (_| | |_| |  __/\__ \ |_  |_   _|
                                          |_|     |_| \___/    |_|   |_|\___/|____/    |_|     |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___|_|\___/|___/\___|___|_|  \___|\__, |\__,_|\___||___/\__|   |_|  
                                                                                                                                                                 |_____|           |_|                            
                                        
                                        + T0: 105: socketserver.TCPServer.close_request => ( request=<socket.socket fd=776, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 1135)> )
                                                         _____ ___            _  ___   __                            _        _         _                        
                                                   _    |_   _/ _ \     _    / |/ _ \ / /_      _     ___  ___   ___| | _____| |_   ___| | ___  ___  ___     _   
                                                 _| |_    | || | | |  _| |_  | | | | | '_ \   _| |_  / __|/ _ \ / __| |/ / _ \ __| / __| |/ _ \/ __|/ _ \  _| |_ 
                                                |_   _|   | || |_| | |_   _| | | |_| | (_) | |_   _| \__ \ (_) | (__|   <  __/ |_ | (__| | (_) \__ \  __/ |_   _|
                                                  |_|     |_| \___/    |_|   |_|\___/ \___/    |_|   |___/\___/ \___|_|\_\___|\__(_)___|_|\___/|___/\___|   |_|  
                                                                                                                                                                 
                                                
                                                + T0: 106: socket.socket.close => 
                                                        + T0: 107: socket.socket.__setattr__ -> builtins.object.__setattr__ => ( name='_closed', value=True )
                                                        - T0: 107: socket.socket.__setattr__ -> builtins.object.__setattr__ <= None
                                                        + T0: 108: socket.socket._real_close => ( _ss=<class '_socket.socket'> )
                                                        - T0: 108: socket.socket._real_close <= None
                                                - T0: 106: socket.socket.close <= None
                                                         _____ ___            _  ___   __                            _        _         _                        
                                                        |_   _/ _ \          / |/ _ \ / /_            ___  ___   ___| | _____| |_   ___| | ___  ___  ___         
                                                 _____    | || | | |  _____  | | | | | '_ \   _____  / __|/ _ \ / __| |/ / _ \ __| / __| |/ _ \/ __|/ _ \  _____ 
                                                |_____|   | || |_| | |_____| | | |_| | (_) | |_____| \__ \ (_) | (__|   <  __/ |_ | (__| | (_) \__ \  __/ |_____|
                                                          |_| \___/          |_|\___/ \___/          |___/\___/ \___|_|\_\___|\__(_)___|_|\___/|___/\___|        
                                                                                                                                                                 
                                                
                                        - T0: 105: socketserver.TCPServer.close_request <= None
                                                 _____ ___            _  ___  ____            _____ ____ ____  ____                               _                                                   _           
                                                |_   _/ _ \          / |/ _ \| ___|          |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ ___| | ___  ___  ___     _ __ ___  __ _ _   _  ___  ___| |_         
                                         _____    | || | | |  _____  | | | | |___ \   _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ __| |/ _ \/ __|/ _ \   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                                        |_____|   | || |_| | |_____| | | |_| |___) | |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | | (__| | (_) \__ \  __/   | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                                                  |_| \___/          |_|\___/|____/            |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___|_|\___/|___/\___|___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                                                                                                 |_____|           |_|                            
                                        
                                - T0: 103: socketserver.TCPServer.shutdown_request <= None
                                         _____ ___            _  ___ _____           _____ ____ ____  ____                               _           _      _                                                        _           
                                        |_   _/ _ \          / |/ _ \___ /          |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ ___| |__  _   _| |_ __| | _____      ___ __      _ __ ___  __ _ _   _  ___  ___| |_         
                                 _____    | || | | |  _____  | | | | ||_ \   _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__/ __| '_ \| | | | __/ _` |/ _ \ \ /\ / / '_ \    | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                                |_____|   | || |_| | |_____| | | |_| |__) | |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _\__ \ | | | |_| | || (_| | (_) \ V  V /| | | |   | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                                          |_| \___/          |_|\___/____/            |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___/_| |_|\__,_|\__\__,_|\___/ \_/\_/ |_| |_|___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                                                                                                                |_____|           |_|                            
                                
                        - T0: 45: socketserver.TCPServer.process_request -> socketserver.BaseServer.process_request <= None
                                 _____ ___            _  _  ____            _____ ____ ____  ____                                                                                                _           
                                |_   _/ _ \          | || || ___|          |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __ _ __  _ __ ___   ___ ___  ___ ___     _ __ ___  __ _ _   _  ___  ___| |_         
                         _____    | || | | |  _____  | || ||___ \   _____    | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__| '_ \| '__/ _ \ / __/ _ \/ __/ __|   | '__/ _ \/ _` | | | |/ _ \/ __| __|  _____ 
                        |_____|   | || |_| | |_____| |__   _|__) | |_____|   | || |___|  __/ ___) |  __/ |   \ V /  __/ | _| |_) | | | (_) | (_|  __/\__ \__ \   | | |  __/ (_| | |_| |  __/\__ \ |_  |_____|
                                  |_| \___/             |_||____/            |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_) .__/|_|  \___/ \___\___||___/___/___|_|  \___|\__, |\__,_|\___||___/\__|        
                                                                                                                           |_|                              |_____|           |_|                            
                        
                - T0: 36: socketserver.TCPServer._handle_request_noblock -> socketserver.BaseServer._handle_request_noblock <= None
                         _____ ___            _____  __           
                        |_   _/ _ \          |___ / / /_          
                 _____    | || | | |  _____    |_ \| '_ \   _____ 
                |_____|   | || |_| | |_____|  ___) | (_) | |_____|
                          |_| \___/          |____/ \___/         
                                                                  
                 _____ ____ ____  ____                               _                     _ _                                         _                   _     _            _            
                |_   _/ ___|  _ \/ ___|  ___ _ ____   _____ _ __    | |__   __ _ _ __   __| | | ___     _ __ ___  __ _ _   _  ___  ___| |_     _ __   ___ | |__ | | ___   ___| | __        
                  | || |   | |_) \___ \ / _ \ '__\ \ / / _ \ '__|   | '_ \ / _` | '_ \ / _` | |/ _ \   | '__/ _ \/ _` | | | |/ _ \/ __| __|   | '_ \ / _ \| '_ \| |/ _ \ / __| |/ /  _____ 
                  | || |___|  __/ ___) |  __/ |   \ V /  __/ | _    | | | | (_| | | | | (_| | |  __/   | | |  __/ (_| | |_| |  __/\__ \ |_    | | | | (_) | |_) | | (_) | (__|   <  |_____|
                  |_| \____|_|   |____/ \___|_|    \_/ \___|_|(_)___|_| |_|\__,_|_| |_|\__,_|_|\___|___|_|  \___|\__, |\__,_|\___||___/\__|___|_| |_|\___/|_.__/|_|\___/ \___|_|\_\        
                                                               |_____|                            |_____|           |_|                  |_____|                                           
